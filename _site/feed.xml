<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Grace Yu</title>
    <description>Gyudon is tasty</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 01 Jan 2021 17:33:37 -0800</pubDate>
    <lastBuildDate>Fri, 01 Jan 2021 17:33:37 -0800</lastBuildDate>
    <generator>Jekyll v4.0.0</generator>
    
      <item>
        <title>Trees and Changing Leaves (2020 Reflection)</title>
        <description>&lt;p&gt;In his “The Interpretation of Cultures”, Clifford Geertz wrote that “one of the most significant facts about us may finally be that we all begin with the natural equipment to live a thousand kinds of life but in the end having lived only one.”&lt;/p&gt;
&lt;p&gt;The year is 2015. I was about to start my senior year of high school and in the middle of contemplating which colleges I should apply to. I was a generalist, a jack-of-all trades, and passionate about virtually everything. I was the captain of my high school’s Lincoln-Douglas debate team, and I was also the president of our school’s Science Olympiad club. I loved biology and chemistry as much as I loved math and computer science, which I loved as much as I loved English and French. My polyamory came at a cost though, and I felt genuine anguish as I mulled over the options. But as I considered all of the possible futures laid out before me, one of them lingered in the back of my head rent-free long after I closed the spreadsheet, like a nagging, insatiable itch.&lt;/p&gt;
&lt;p&gt;In English class that year, to help us all prepare for our college applications, we were to bring our personal statement to class for others to give feedback on. I wrote about how I had wanted to become a doctor after my experience growing up with my grandmother being ill. I loved my grandma dearly, but she was diagnosed with stage IV ovarian cancer and my memories of her, while bright, catalog her decline due to the disease. As her cancer reared its ugly head, I watched her and my family suffer, and my childhood was defined by her physical decline and my aunt’s mental decline. And as I remembered what it felt like, and how helpless I felt, I felt resolve. I’d never want to feel that helpless again. I wanted to be able to help. Although it was too late for my family, I wanted to become a doctor to help reduce that suffering for others – and I believed in myself, primarily because I believed I had the emotional perspective to be a good caregiver. I understood what it was like. Of course I’d study hard and become knowledgeable so that I would be a competent doctor, but I’d also be a doctor who met all of her patients with empathy.&lt;/p&gt;
&lt;p&gt;After we received our papers back from peer review, mine had a note on the top: “You should pick a more unique and compelling story for why you want to become a doctor.”&lt;/p&gt;
&lt;p&gt;I stared at those words silently. I remember feeling very small. I put the paper in my backpack. I never did dream again of being a doctor. Perhaps in another life though, I would have been. In that other life, if I had been stronger, less sensitive, or more determined, or more &lt;em&gt;anything&lt;/em&gt; – maybe if I had loved my grandmother more – that would have been so. But it was not so. So nevertheless, no matter the reason, or no matter if there is a reason or not (and it is probably healthier to not delve too deeply into reasons), it is not the life I currently live.&lt;/p&gt;
&lt;p&gt;These irrational hypotheticals about junction points, the road not traveled, and other “lives” I’ve turned away from, always make me pause. It’s a mix of regret, nostalgia, and fondness, melded into a generic gray heaviness. When I was thirteen, I decided I no longer wanted to play piano after practicing religiously and taking lessons weekly since I was five. When I was fourteen, I started playing StarCraft II and later started a StarCraft II team with my friend where we competed in the High School StarLeague and later got third place. When I was seventeen, I decided to become a computer science major and picked a school I knew nothing about solely because they specialized in the field. When I was twenty, I decided to go into industry instead of pursuing a doctorate degree.&lt;/p&gt;
&lt;p&gt;A doctor. A pianist. A singer. An artist. A writer. An astronomer. A microbiologist. A StarCraft II progamer. A professor.&lt;/p&gt;
&lt;p&gt;I had been told all my life some flavor of the American dream where I should pursue something that I love. That makes me truly happy. But when I went to college, I figured that as long as I picked something I relatively enjoyed, I should stop fussing about whether it’s “the one” – and that instead of those romantic ideas about finding a path that I am so passionate about it defines my identity and my happiness, I should just pick something and focus on being good at it. When I was in high school, to some extent, I felt invincible. Everything came easily to me. It was only in college I understood what hard work was, and that I needed to become intimately familiar with it or drown. I became acutely aware of my lack of skill, and more than anything else felt that becoming a competent software engineer was what I should be focusing on. I have many mixed feelings about my time in university, feelings that are still jumbled and chaotic which is why it’s been more than a year since graduating and my reflection on my time there is still long overdue. But if there is one thing I’m grateful for, it is that I was indeed able to become more competent during my time in university. I have many more regrets and “what-if”s about things I would have done differently, but at the end of the day, I’m satisfied with this outcome.&lt;/p&gt;
&lt;p&gt;(As an aside: I have also been thinking about how I frequently feel a sort of “urgency” about losing time, or needing to hit certain milestones about being an adult and being grown up. And I seem to always view one’s life path as being a straight shot in the dark. But the truth is it meanders. I was reminded of this today on Twitter, when I saw a post by a coworker from some mutual follows who started as an entry-level software engineer at my company when he was a few days shy of 30. It was humbling, and worth calling out I felt.)&lt;/p&gt;
&lt;p&gt;Now I’m here. I’m 22 and I graduated last December. In January, I went on a week-long trip to Norway with five guys I had never met in-person (but played video games with), and after I returned I drove from northern Virginia to Los Angeles, California to start work at Riot Games. I moved alone, and I knew no other friends at the time in the city. It’s now been nearing a year since I first began working as an entry-level software engineer on Riot’s Esports Digital team, and this year has been unprecedented for me – and the world – in many ways. And as I was reflecting on this past year, I’m starting to feel the weight of all of the decisions I’ve made in my life that have led me to where I am now: and whether those decisions were big or small, I feel their weight on me the same, and there are times where I struggle to bear them all. I was reading &lt;a href=&quot;https://www.newyorker.com/magazine/2020/12/21/what-if-you-could-do-it-all-over&quot;&gt;this New Yorker article&lt;/a&gt; earlier today, and read this passage:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The philosopher Charles Taylor, who has written much about the history of selfhood, has a theory about why we can’t just accept the way things are: he thinks that sometime toward the end of the eighteenth century two big trends in our self-understanding converged. We learned to think of ourselves as “deep” individuals, with hidden wellsprings of feeling and talent that we owed it to ourselves to find. At the same time, we came to see ourselves objectively—as somewhat interchangeable members of the same species and of a competitive mass society. Subjectivity and objectivity both grew more intense. We came to feel that our lives, pictured from the outside, failed to reflect the vibrancy within.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There’s a person I want to be. She’s somebody who thinks that competency is something learned. She has a growth mindset and isn’t afraid of being wrong. Everybody gets a set amount of time, the clock ticks 168 hours per week for everybody, but somehow the depth of that time that passed for her is not the same. She makes use of it. She studies hard, doesn’t get discouraged, and doesn’t get distracted. She’s somebody who, when she feels that she isn’t skilled enough or knowledgeable enough for something, will try her best anyways and ask for help. She makes bets on herself and is confident to be constantly pushing herself out of her comfort zone.&lt;/p&gt;
&lt;p&gt;I want to be somebody who has that sort of a growth mindset. I’ve talked about before how it’s my goal, and how I actively try to practice it. But the truth is that person is not me, as much as I wish it was, and I’m learning to be easier on myself. However, I am a lot closer than where I used to be. To be honest, although I didn’t admit it for many years, growing up I had a very fixed mindset. I thought that competency was innate. I felt this as it seemed that things where just so much easier for some people than it was for others, and the same was true for myself. I felt that I fell on the “competent” side of that spectrum, and this comforted me greatly. School was easy for me. I was good at many things. I was comfortable where I was good things.&lt;/p&gt;
&lt;p&gt;But I started to get curious. Although I was afraid, I was curious about things outside of what I knew. And so then when I went to college and studied a field I otherwise knew nothing about and met people who knew how to work hard and apply themselves, genuinely apply themselves and try, I crumbled a bit. If I felt that competency is innate, and I was not currently competent, I must just be incompetent, incapable, stupid. Others around me were smart. Others around me were capable, and competent.&lt;/p&gt;
&lt;p&gt;I felt small.&lt;/p&gt;
&lt;p&gt;I still feel that way at times and to a less extreme degree. But I’ve been working through a sort of revisionist history of myself. I think that my perception of myself as being “talented” or “untalented” greatly throws out the time and effort I’ve poured into things. Maybe it’s because I was young, and it’s hard to remember things when you’re a child, but I was good at piano because I had been learning since I was 5 years old. I earned a 7 year’s program from my Russian piano school, which would allow me to go to music college or teach. But I have a shameful story about why I quit: &lt;a href=&quot;https://youtu.be/Zo0o7hhDe6o&quot;&gt;I met somebody better than me&lt;/a&gt;. I remember feeling overwhelmed by hearing her play and meeting other piano geniuses at my first international competition. They were the same age as me or younger, and so we had all passed about the same amount of time playing piano. But the depth of the time we had both passed felt so astronomically different. I chalked it up to talent. And I was not talented, so I quit.&lt;/p&gt;
&lt;p&gt;I remember a conversation I had once had with my piano teacher that I never thought much about until recently. I had asked her a bit about some of those other piano students I had met, and she told me they practiced for four hours or more per day. I practiced for maybe an hour if I was being disciplined, and sometimes I forgot days. But looking back, that’s something which should not be overlooked – the depth of our time passed was indeed different, and by at minimum a factor of four.&lt;/p&gt;
&lt;p&gt;Also, I was recently rewatching some &lt;a href=&quot;https://youtu.be/-tRmVMHJ1XI&quot;&gt;old videos of myself playing the piano&lt;/a&gt;, and while I wince at my mistakes, I was a lot better than I remembered or ever gave myself credit for. I’m still a bit ashamed about my younger self, but I’m starting to be a bit proud of what I can do even if I’m not the best. Lately, I’ve been playing piano again, and while my fingers were stiff at the start, they’ve become much more malleable, and I’ve become familiar again with the joy I get from even just a few minutes of playing by myself.&lt;/p&gt;
&lt;p&gt;I like to think that since then I’ve changed. I work harder. I believe in myself and my ability to learn and become good at new things more. But even then, I have a long ways to go. I was reminded of that &lt;a href=&quot;https://gyyu.github.io/what-learned-2/&quot;&gt;this summer when my team had an intern&lt;/a&gt;, and I realized that I was not pushing myself out of my comfort zone as much as I should have been. I was like a shell of my former self, the bright-eyed college student who was so excited to be working what was honestly my dream job, and I didn’t realize this until I encountered a bright-eyed college student who was not myself on the team when he joined as our intern this summer. It was a wake-up call of sorts. I started making more of an effort to integrate myself into team rituals and other meetings – I would have moments where I would hesitate to say something because I wasn’t the expert in the room, or I felt that somebody else knew more than me, or that I could be saying something wrong. I was timid and afraid of being out of place. But, those efforts have been going well, and that’s especially because of how supportive my team and my new manager is of me. I’m incredibly grateful to all of them.&lt;/p&gt;
&lt;p&gt;But sometimes, I still think about that “other life” where I could have been a doctor. Where I was passionate about helping others. And to be honest, while I enjoyed what I was doing, I didn’t feel like I could say that was how I felt at the time. I was working harder, pushing myself, and going outside of my comfort zone and a result I was definitly feeling more invested again. But still, it wasn’t quite the same.&lt;/p&gt;
&lt;p&gt;I’ve spoken a bit about my role in the leadership of Riot’s gender diversity employee resource group, and the wonders it’s done for me and my confidence as well as how much I enjoy the work. I’ve also mentioned S.L., one of the employee resource group’s co-leads and co-founders, who has been an incredible mentor to me and, when I’m either afraid to ask or don’t know to ask, answers all of the questions I never even realized I had. I had been volunteering to do some work for the player dynamics team, and along the way, had rekindled an interest I had in online communities and moderation (early in undergrad, I used to work with &lt;a href=&quot;https://joseph.seering.org/&quot;&gt;Joseph Seering&lt;/a&gt; in &lt;a href=&quot;https://www.cs.cmu.edu/~eheartlab/&quot;&gt;eHeart Lab&lt;/a&gt; in CMU’s Human-Computer Interaction Institute). And she asked me if I was considering looking to work on the team.&lt;/p&gt;
&lt;p&gt;I was a bit shocked as the idea had never even once crossed my mind. Maybe it was comfort, or maybe it was safety and security, but the thought of considering other roles had never once crossed my mind. I also felt like it was a bit brazen for me – here I was, an entry-level software engineer who had the opportunity to work at Riot Games and on many interesting projects directly after graduating, and who was surrounded by incredibly knowledgeable coworkers at a time where many of my friends (many of whom I should say I’d consider to be more capable than myself) had lost their jobs while I was continuing to work worry-free in an industry that basically benefited from the pandemic – and I had the audacity to look for more. But she was reasonable and firm, and I realized she was right.&lt;/p&gt;
&lt;p&gt;She later introduced me to J.G., a principal software engineer at my company. I had seen her around on Slack but never dared to approach, but had noticed her because she was the only principal software engineer I knew of who was a woman. But, in our first meeting, she came with a sort of warmth, humor, and care that instantly disarmed me and made me feel comfortable reaching out to her and sharing my thoughts and worries. I learned more about her, and I started to feel more comfortable talking about what I wanted to do and where I wanted to go – not just to her but to myself, and being comfortable with being more ambitious.&lt;/p&gt;
&lt;p&gt;I left our first call feeling incredibly excited. Energized. I left our first meeting feeling passionate. It was a bit of a revelation, to be honest. I was surprised, but indeed, when I woke up the next morning and thought about it, the feeling was still there. And it confused me a bit as I didn’t quite understand why. It wasn’t the first time I had talked with a mentoring figure. And although I was especially in awe of J.G. (I remember kind of eyeing her on Slack and being impressed because of her title, but every interaction with her since has made me realize she’s much cooler than I could have ever imagined), I knew it wasn’t just sheer impressiveness either.&lt;/p&gt;
&lt;p&gt;My boyfriend will be applying to law schools soon, and I was helping him the other day with his law school applications. In it, he has to write a personal statement, and in his personal statement he wanted to tell a story about how his first encounter with representation through an Asian-American literature class he took in college woke him up out of his past apathy and empowered him to start seriously applying himself and trying to be better. As I left comment after comment and picked at one sentence’s phrasing and another’s grammar, I had a realization about why that talk with J.G. had affected me so.&lt;/p&gt;
&lt;p&gt;It affected me because meeting her and seeing her made me feel represented and as a result empowered. I was seeing another woman in what was my long-term goal: I’d love to one day be a principal software engineer. And seeing another woman in that role made me feel excited. It rekindled a passion in me to want to do more, be better, and achieve more. But I had never known or even heard of any women in my vicinity who were a principal software engineer. I worked with prolific engineers every day, and they are kind to me and care about my growth. They support me. And I’m endlessly grateful for them. But I am the only woman on my team, the only software engineer I know in my discipline, and in previous internships I’ve also similarly been alone in that way – but I’ve never felt like it was important because I can still work, still code, still contribute even if I’m the only woman. I’ve heard nightmare stories about workplaces that were rife with gender discrimination or harassment, and similarly Riot’s past had worried me and made me &lt;a href=&quot;https://gyyu.github.io/summer-at-riot/&quot;&gt;hesitate to work there after I was offered the internship&lt;/a&gt;. But that wasn’t what I was experiencing. I wasn’t being discriminated against or harassed, so when my team captain would sometimes check in on me in 1:1s and ask how we could best support me and if there were any processes that could be streamlined, I had no serious changes to recommend to him (as a side note, I am very grateful for my team’s leadership as well in trying to be more inclusive). So because that’s not what I was experiencing, I felt very strange with the thought that being the only woman for this long has been tough for me or has negatively impacted me in any way.&lt;/p&gt;
&lt;p&gt;But I’m starting to realize that the ways in which a lack of representation affects people can be more subtle after my own experience of seeing another woman as a role model and how it has empowered me like nothing else has since I first began my trek into computer science in college. And now that I’m at the end of this year and looking towards the next, I’m realizing that I’m still capable of being happy, of being excited by work and by games, and I’m still capable of being productive and being eager to learn more. There’s a number of skills and courses J.G. recommended I pick up related to C++ and game programming, and I have been using my break to get started and I plan on continuing to spend my free time in the future working through the material.&lt;/p&gt;
&lt;p&gt;I do think of myself as “deep” individual with a hidden wellspring of feeling and talent to find. And although I don’t feel that I’m particularly special and I know I have far to go, here’s to finding it, and making that visible from the outside.&lt;/p&gt;
&lt;p&gt;Here’s to betting on myself in 2021, as cheesy as that sounds. I wish everybody the best for the new year.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;And all the lives we ever lived&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;And all the lives to be,&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Are full of trees and changing leaves.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(Virginia Woolf’s &lt;em&gt;To the Lighthouse&lt;/em&gt;)&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Dec 2020 00:00:00 -0800</pubDate>
        <link>http://localhost:4000/2020-eoy/</link>
        <guid isPermaLink="true">http://localhost:4000/2020-eoy/</guid>
        
        
        <category>personal</category>
        
      </item>
    
      <item>
        <title>What I Learned (and Still Don't Know) #2: Pandemic Edition</title>
        <description>&lt;blockquote&gt;
&lt;p&gt;“Quarterly updates”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;…whoops. In the meantime though, here’s a recap post that’s meant to cover everything since, well, April 2020.&lt;/p&gt;
&lt;p&gt;Life has changed quite a bit since my last post. I work from home now. I wake up, get dressed (yes, still!), and hop into my Google Meets daily stand-up. I work throughout the day, and sometimes take a break in the afternoon for a quick nap. I am in the process of adopting a cat that I’ve been fostering since mid-August, and I’ll walk over and pet him as he suns himself by my patio door when I’m building my code. I’ve also moved since my last update to an apartment closer to the office with some friends I interned with last summer (they all also returned to work at Riot full-time). Some days after work, I’ll go on a run if I remember my goal about trying to be more active again (although on most days, my motivation is quite lacking). And then after dinner, I’ll play video games with my friends. If I remember, I’ll call home (although if it gets too late, I skip calling that night because of time zone differences and worrying my parents might have already gone to sleep).&lt;/p&gt;
&lt;p&gt;But before I had this routine, it was hard for me to adjust to quarantine life and all of the newfound rites and rituals that came with it. So much of my social life had been my coworkers and friends at the Riot office, refereeing on weekends, heading to the rock climbing gym after dinner and until closing, driving back home at midnight, and waking up in the morning getting ready to do it all over again. I was the furthest I had ever been from home, family, and friends – an entire country away – and I went through a breakup in January that I was taking a bit hard. I had been keeping myself busy to cope, but when the pandemic happened, I found myself completely on my own. There was also just the stress and worries that came with the pandemic and the news – the pandemic was ever-worsening, racial injustice was again in the national spotlight of attention with protests erupting in every major city, the economy was ailing, and the political climate was as bifurcated as it ever had been leading up to the presidential election. It was constant background stress, and it made dealing with emergent issues from other areas of my life burn an already short fuse dangerously close to its end.&lt;/p&gt;
&lt;p&gt;I felt like a lot of my life plans were thwarted. Yet despite that, I also felt a bit guilty as well. A lot of my friends from college messaged me after the switch to online learning about the clairvoyance I must have possessed to have graduated a semester early and skipped out on the entire fiasco that was “Zoom University”. While those conversations were always light-hearted, there were others that took place that weighed heavily on my mind. Before I interned at Riot, I interned at Uber ATG, and I had a number of colleagues and friends who worked at Uber (and similar companies, like Lyft and Airbnb) who lost their jobs. Many of my friends – all of whom are just as capable as I am or honestly, more so – lost their job offers or were now struggling even harder than before to find one.&lt;/p&gt;
&lt;p&gt;And then there was me. I was working at a company as a junior developer where my expectations are mostly about learning and becoming more technologically adept, and I had started in my role before all of the uncertainty in the job market began. I was receiving amazing mentorship from engineers on my team, and the video game industry was one of the few industries that were, and it feels so strange to say, basically beneficiaries of the pandemic. More people than ever were playing our games and watching esports.&lt;/p&gt;
&lt;p&gt;I felt really bad. I felt guilty. It was almost like survivor’s guilt, and I really felt like I didn’t deserve my position.&lt;/p&gt;
&lt;p&gt;I’m currently in the middle of putting my life back on track, and adjusting to what is now the new normal. It’s been a while since I’ve been to this little corner of mine, and there’s some dust I know that I need to clean off. I missed giving an update for Q2 (or really anything since the spring time), and instead I’m just going to give a generic “What I Learned (and Still Don’t Know) #2: Pandemic Version” post.&lt;/p&gt;
&lt;section id=&quot;pandemic-life-and-mental-health&quot; class=&quot;level1&quot;&gt;
&lt;h1&gt;Pandemic Life and Mental Health&lt;/h1&gt;
&lt;p&gt;I feel a bit shy admitting this, but ultimately these posts are meant to be reflections for me – records where I can look back at my frank musings at the time, for better or for worse, and hopefully chronicle my progress over time. So: as I said before, I struggled a lot adjusting to the pandemic. It was hard on my mental health. I was essentially living on my own (I had housemates at my old place, but we all kept to ourselves), and there were periods of multiple weeks that would go by where I would only leave my room to go to the bathroom, do my laundry, or quickly grab food. I had only recently moved and started work when the pandemic began, and I didn’t quite have a community yet in LA. I didn’t realize until the pandemic began how essentially all of my social life was based in the office or otherwise related to Riot. I was also quite a few years younger than most other people on my team, and while my coworkers adjusted to their own set of difficulties that came with sheltering-in-place with a family, I was just completely alone. I was far from home and missed my family, but I didn’t want to fly home because of the risk of transmitting disease to somebody in my family who was immunocompromised, and I didn’t want to take the time off to drive all the way across the country.&lt;/p&gt;
&lt;p&gt;I also struggled with balancing having healthy work hours and boundaries. I was used to there being a physical delineation between when I was working and when I wasn’t – I’d walk into the office and do my work, and then leave and know I was on personal time. When I first started working from home, my work and personal space were indiscernible from one another. I would be “off-work” and playing video games on my own, but feel guilty, as if I should be working. I’d check Slack and read my emails during personal time, and I’d find it hard to focus during work hours. My motivation to work and enjoy it was also being worn down by the combination of being so isolated and also tasks taking longer to complete (I never appreciated how much unblocking happens from quick conversations over the shoulder, or how much of my awareness of the team and our work comes from overhearing conversations), in addition to there being more distractions around me in a work-from-home setting.&lt;/p&gt;
&lt;p&gt;I had a few personal matters that I was learning to cope with, and I also felt demotivated from life plans changing. I had just graduated and was working my first job after moving across the country – I was so ambitious and excited when I first arrived. There were so many things I wanted to do and learn. It felt like I was just starting to get into the groove of things when my life felt uprooted and put on pause.&lt;/p&gt;
&lt;p&gt;I didn’t feel like myself. And doing anything suddenly felt harder and so much more mentally taxing. I found myself exhausted after a workday, even when I felt like I was being far less productive than I was when I was at the office.&lt;/p&gt;
&lt;p&gt;What turned this around for me, to be completely honest, was making friends. I met a person online through a mutual friend who then introduced me to his entire friend group. I joined their Discord server, and everybody I met welcomed me. They were all my age, and we played games together. I found myself looking forward to getting off work and being able to play and laugh hysterically with everybody until late into the night, and I found myself being a lot more energetic throughout the day. They were all people I had never met in person – they were all Canadian – but they were people who still to this day I’d call my closest friends. And suddenly, as I grew less lonely, I found myself being more productive at work and gaining motivation again to return to the goals I had set for myself when I first moved to LA.&lt;/p&gt;
&lt;p&gt;I always feel a little bit ashamed admitting that meeting them was the pivotal moment for my mental health, rather than some sort of self-revelation or “pulling myself up by the bootstraps”-type story. I feel like I’m weak and dependent on others. I had this happen a bit in college too, where times that I struggled in school correlated with times that I was unhappy or lonely. I see others who are always able to step up to the plate regardless of how much is weighing on their shoulders, and then look at myself and am just disappointed. I see it as a lack of discipline, resolve, or just in general a fault of having a weak spirit. I just don’t have enough grit. I was raised to believe that having friends and socializing were “frivolous” and “unproductive”, and I’m still trying to fight against those beliefs and be more forgiving of myself.&lt;/p&gt;
&lt;p&gt;Since then, I moved in July to a new place with three friends who also work at Riot (two of them started on the same day as me, while another started a few weeks afterwards). We had all met the previous summer as interns, and we cook for one another and spend time together on weekends. On weekdays, we’ll pass each other in the kitchen and make smalltalk; we’ll ask about each other’s day or rant about an issue that’s frustrating us at work before going back to our rooms to continue with what we were doing. I’ve had so much fun with them all.&lt;/p&gt;
&lt;p&gt;Mental health to me has always felt like something unrelated to my productivity and ability to realize goals. But I supposed in a way, at least for myself, it feels now like mental health and having a solid “personal life” foundation is a sort of necessary prerequisite to being a capable human being, much like Maslow’s hierarchy and the prerequisites to actualization. But I’d also like to say that after opening up more to my coworkers and friends as well, everybody’s pandemic situation is different, but it’s been hard for everybody. Here’s to being easier on ourselves.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;work-progress&quot; class=&quot;level1&quot;&gt;
&lt;h1&gt;Work Progress&lt;/h1&gt;
&lt;p&gt;It took me a bit to even remember what I did in this period. Everything from mid-March to now feels like a gray, amorphous amalgamation of days. My team is currently writing our next set of 120 Day Plans, and I went back and read through my previous goals and realized I’ve accomplished quite a bit more than I was giving myself credit for.&lt;/p&gt;
&lt;p&gt;A few bullet points I’d like to point out that I accomplished: - I was the on-call secondary in a training role for quite a few months in the spring and early summer, but since then joined the primary on-call rotation. My first shift was during an especially busy week in playoffs where our schedule included TSM vs. C9 and G2 vs. FNC, and I remember being extremely nervous and hovering around my phone. But, the week was uneventful and that shift passed without any issues. It will take quite a few more rotations before I’m actually fully comfortable, but I’m looking forward to it with a lot more confidence. - I made quite a bit of progress on [redacted product] before my team reprioritized (which I’ll talk about a bit more later), and also paired with H.S. closely pretty much every day. I’m extremely grateful to H.S. and his mentorship has done wonders not just for my technical skills (I’ve learned a lot and have become pretty comfortable working with back-end web systems), but growing confidence and understanding more of the thought process behind being a better engineer. His favorite thing to tell me: “Question the frame.” - The &lt;em&gt;Designing Data-Intensive Applications&lt;/em&gt; reading group has been going really well. We’ve had to delay some meetings here and there, but it’s something I’m happy I started and am participating in. - I feel like I’m finally started to step up to the plate for being one of the leaders in RAD Genders. I’ve delivered on pretty much all of my Q2/Q3 goals, and am starting to be a lot better at navigating leadership in a corporate setting. I also feel a lot more comfortable with the other leads in RAD Genders, and respect them immensely. I’ve become a lot better at relying on them for help and reaching out for feedback, which contributes to me better achieving my deliverables. - I feel fully integrated in many more team rituals that I was nervous to participate in before. I’m reviewing more PRs, asking more questions, giving sizings for every task that’s applicable to me, and overall just being a lot more engaged.&lt;/p&gt;
&lt;p&gt;Some things that I didn’t make as much progress on: - Giving feedback to RFCs. Part of it is that after our team reprioritization, there simply weren’t a lot of opportunities for this, but when I was still working on [redacted product] I could have contributed more (or at least asked more questions) about the [redacted product] RFCs. - I still am pretty in the dark about CI/CD concepts. - While I did learn about Rewards, I’m still relatively in the dark about Drops, but my current work of adding a new video provider (the full-loop, from back-end to front-end and also interacting with the third-party API) and integrating with LiveStats, Rewards, and Drops is helping me make progress in this weak area.&lt;/p&gt;
&lt;p&gt;I would also say that I’ve gotten a lot more comfortable with 1:1s with other people, especially my manager, tech lead, and team captain. I’ve been able to use them to be a lot more productive. Some examples are I’ve started pairing or going through a run-down of the architecture of certain products with my tech lead, or asking questions about Esports Digital priorities with my team captain (and also giving input on which tasks I’m most invested in). I’ve also been having better 1:1s with my manager, and we recently went through the revised job architecture with looking at opportunities for me to start aiming towards tasks that a mid-level software engineer would pick up.&lt;/p&gt;
&lt;p&gt;A random new goal that I want to accomplish this upcoming quarter: give a tech talk! I’m a bit nervous at picking a topic, but I’m going to probably lean towards something related to programming language semantics. More details TBD – I’ll probably write about my process preparing for it and perhaps record a version to post here for my own amusement.&lt;/p&gt;
&lt;p&gt;(Shameless plug: check out my introductory notes on Functional Programming &lt;a href=&quot;https://gyyu.github.io/fp-1/&quot;&gt;here&lt;/a&gt;! I know, I haven’t made another one in a while. I’ll do it soon, I promise.)&lt;/p&gt;
&lt;section id=&quot;team-reprioritizing&quot; class=&quot;level2&quot;&gt;
&lt;h2&gt;Team Reprioritizing&lt;/h2&gt;
&lt;p&gt;When I first joined Riot, for some time I worked on mostly emergent issues, code clean-up, and post-MVP tasks on various products. But, starting in early summer, I joined M.H. and H.S. on working on a new product’s back-end. It was really exciting me for a few reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This was the first time I’ve been around for a product that was just starting. I got to see and give feedback on the designs, and I was really excited and passionate about the product. I was really happy to be working on something that I felt like esports fans were going to love.&lt;/li&gt;
&lt;li&gt;It was also my first chance to see a product “from start to end” – end here being MVP and launch. I really felt a sense of… pride? in finally feeling like I owned a piece of a product.&lt;/li&gt;
&lt;li&gt;I’ve always only ever worked on products that were a bit more “mature” – there were already guard rails in place for me to follow when I picked up new tickets, even for tasks that involved adding new features. With this new product, since I was building it from scratch, there were a lot of things that were just up in the air. I had to ask a lot of questions, think hard about how something would be used, and sometimes go back and change things. There were also a lot of things that I thought I understood that I realized I actually didn’t understand that deeply. I really appreciated this because I want to specialize in back-end web technology, and I was able to write migrations, build the domain model and database representations of different objects, and make the API layer and connect it with the database layer I had just worked on. I was able to pick up larger-size tasks and completely own it, and I got a lot of feedback along the way that helped me greatly.&lt;/li&gt;
&lt;li&gt;I got a chance to work on exploring options and making design decisions. There were lots of things with this new product that were still up in the air, and opportunities to complete a spike on various topics. We wanted some way of notifying users and considered potentially using email, which is what I completed a spike for. I wrote up a document with my findings after lots of reading and meetings with various people around Riot, and opened it for feedback, questions, and general input from my team.&lt;/li&gt;
&lt;li&gt;It was also the closest I had ever worked with other people. We were basically putting down the rails as the train was moving, and we were all constantly pumping out code more rapidly than I ever had experienced in the past. We were discussing better ways to approach things, what others were doing, any merge issues that were going to happen, or any dependencies or blockages that were happening between each others’ work. It was especially challenging figuring out how to work closely with others when we couldn’t be there in-person, but we kept up over Slack and 1:1s.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At some point in mid-July, my team made the decision to deprioritize the new product. We wrapped up work at the closest stopping point, merged in our changes, and haven’t touched the product since. In the moment, I was really disappointed by the decision. I was excited to be working on a product from the early stages, as all of my previous experience so far had been with mature products with already established frameworks and design patterns. We were moving quickly, and we frequently would revise our choices as new things cropped up. I was also working on the skills that I wanted to gain more experience with (backend web services) and with the people I wanted to learn from (especially H.S.).&lt;/p&gt;
&lt;p&gt;However, because a number of esports events were cancelled as a result of COVID-19 and we were tackling what felt like was too many projects for the number of engineers on our team (especially with one engineer going on paternity leave), the project I was working on was iced in favor other others that would bring in more revenue to make up for our department’s losses. It’s disappointing, but I understand and also believe that the decision was the best one for the team’s health overall – the concern was first initiated by another engineer on the team mentioning feeling like they were being pulled apart in a sprint retro, which our leadership team took seriously.&lt;/p&gt;
&lt;p&gt;Anyways, that’s a part of work life, isn’t it? My first dropped project!&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;intern&quot; class=&quot;level2&quot;&gt;
&lt;h2&gt;Intern&lt;/h2&gt;
&lt;p&gt;After the pandemic first broke out, another plan that was thrown into uncertainty was whether or not the summer internship program would still take place at all, and if it still was, in what form it would be. Eventually, Riot made the decision to host all of the interns remotely in a shortened 8-week internship (effectively, it was a 7-week internship because we had a company-wide week off at the beginning of August). My team ended up having an intern, and it was an incredibly nostalgic but also nerve-wracking event for me.&lt;/p&gt;
&lt;p&gt;I joined Riot as an intern when I was 20. I remember struggling with feeling like I belonged on the team, and I nervously looked to my mentor who encouraged me, worked together with me on various projects, and who was completely dedicated to ensuring that I had everything that I needed during my internship. He answered all of my questions, pointed me to others to have 1:1s and connect with, and to this day I have the upmost complete respect for him. Even now, although we’re both full-time employees and haven’t worked on the same products in a while, I still see him as my mentor. By the end of my internship, I had loved my time and was very seriously thinking about coming back. I felt like I belonged, and I truly “felt like a Rioter” – and I wanted to return to that when I finished school.&lt;/p&gt;
&lt;p&gt;I also thought about S.S., the intern-to-full-time-convert who was on Esports Digital (but a different team) at the time that I joined and whose desk was right next to mine. We grew really close that summer, and although he wasn’t somebody who I received a lot of technical mentorship from, I’d voice some of my anxieties about being an intern and whether I was “doing enough” to him, and he’d tell me about his experiences and what the internship had been like for him. He and I also became good friends, and although he left Riot halfway through my internship last summer, we still kept in contact and I even saw him a few times before the pandemic started.&lt;/p&gt;
&lt;p&gt;I thought about these experiences when our intern, A.S., joined. M.H. was his mentor, and he joined the product I was working on (although after the deprioritization of the product, he and M.H. switched to Drops). We set up our own 1:1s every Monday morning.&lt;/p&gt;
&lt;p&gt;I liked A.S. a lot, as did (I’m sure) everybody else on our team. He was friendly, enthusiastic, and eager to learn. He asked questions, and jumped straight into leaving feedback on pull requests and asking questions. He took initiative and wasn’t afraid of being wrong – he was there to soak up everything he can and do as much as he could. To be honest, his energy really caught me by surprise. I realized I had grown a little bit… complacent. I don’t really know when it happened – when I first joined, I was the bright-eyed and energetic new hire who was asking questions and looking to learn as much as I could. And then the pandemic happened. And then work-from-home happened. I was really isolated, and I found myself growing burnt out over work. I also always saw myself in this role of being the most junior member of the team, and as everybody else around me always encouraged me and told me that my focus should simply be on learning as much as I could, I felt like I had to put away some of my ambition and just focus on learning as much as I could and from others. After all, everybody knew more than me.&lt;/p&gt;
&lt;p&gt;But A.S. was completely different from me. I was afraid of being wrong, and sometimes when I didn’t know an answer to something or wasn’t sure, I’d always tackle it on my own than ever ask for help from my teammates. If there was something on a PR I wasn’t sure about, I’d hesitate to comment, because I’d reason to myself that there was probably something I was missing and that was why I might disagree with something. But he immediately jumped in, left lengthy reviews, and was confident in himself (but still really humble and asked lots of questions). And to be honest, I felt a bit of pressure. Prior to the new product we were working on together, I had never touched back-end web technology. I focused mostly on front-end in my summer internship, and although my team and my manager knew that I wanted to make the switch, because of our team’s needs for the first few months after I came back I was still doing front-end development. When A.S. joined, we had just barely been working for a matter of weeks, and I was more green to working in web back-end systems than he was. A.S. was actually older than me by a few months (he’s from Canada, and not only do a number of them have five-year programs instead of four-year programs, but I also graduated a semester early) and had done more internships/co-ops combined than I’ve had total work experience. So while I could understand and rationalize how I was also just learning how to work on back-end systems and I had months of experience on other products in our ecosystem that he hadn’t had, I still felt bad about myself. I felt like I shouldn’t be a “beginner”, and I felt bad that I wasn’t an SME on the product.&lt;/p&gt;
&lt;p&gt;There’s definitely a lot I can learn from A.S., and I want to be more confident and have an approach to work and learning that’s closer to his. It was a joy to have him on our team and work with him, if not also incredibly nostalgic to experience the internship from the other side for the first time.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;worlds&quot; class=&quot;level2&quot;&gt;
&lt;h2&gt;Worlds&lt;/h2&gt;
&lt;p&gt;For a period of time, we weren’t certain whether Worlds was still going to happen, but until we got the official red light, we continued work as normal. There were a number of deals signed for company sponsorships, advertisements, and agreements that spelled out features and additions for us to implement before September. I ended up picking up my biggest responsibility yet – adding support for Trovo to our site.&lt;/p&gt;
&lt;p&gt;It was a significant task for me for a number of reasons. Not only was it the largest in points value I’ve ever tackled (and the work lasted two sprints), but it also touched every single product in our full esports stack from back-end to front-end. I needed to add support for it in our back-end service, in our product for tournament operators to start and manage the live stream, on lolesports.com (an interactive JS player with chat as well), and to also support LiveStats and Drops. Additionally, Trovo was made by a third-party outside of Riot, and I had to communicate back and forth with Trovo employees about using their API, meeting their demands, asking questions, reporting bugs, and managing expectations and deadlines (there were a number of times that they would ask for things that weren’t in scope or it wasn’t clear yet what was signed in the contract, and I’d have to rope in my product manager to communicate with them). Additionally, the Trovo team worked in a time zone that was 15 hours ahead of Los Angeles.&lt;/p&gt;
&lt;p&gt;And, this was all with a tight deadline to be done by Worlds start.&lt;/p&gt;
&lt;p&gt;It was the most crunch I had experienced yet since working full-time, but to be honest, I enjoyed it in a strange way. I knew that what I was working on had stakes, and I was eager to make sure it would happen. There were a lot of emergent issues that cropped up – errors in the API given, bugs that weren’t on our end but instead on the Trovo player side, changes in specification, my manager leaving Riot (who had been the primary communicator between Trovo and us beforehand), issues with Drops, and ongoing changes to settings service and how we split traffic. But, working on Trovo ended up being a chance for me to showcase my familiarity that I’ve gained since returning over all of our esports products, and I was really proud to see everything come together.&lt;/p&gt;
&lt;p&gt;And yes, I’m one of the people who have Trovo set as my default video provider on lolesports.com. Come on, I have to! I’m the one who implemented it. I’m also one of the people who still have the “Jump to game start” button toggled on instead of automatically pressed, since seeing it every time brings me right back to my internship days – it was my onboarding project when I first joined that summer over a year ago now. I’m proud of how much I’ve been able to contribute.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id=&quot;rad-genders-and-leadership&quot; class=&quot;level1&quot;&gt;
&lt;h1&gt;RAD Genders and Leadership&lt;/h1&gt;
&lt;p&gt;I joined the RAD Genders team in spring, and am the belonging strike team lead for the RIG (I am 10% allocated to Riot’s Diversity and Inclusion team). I feel like I’ve grown a lot more confident in my role in the leadership team – I used to really feel out of place because of how junior I was. I was new to Riot, and new to working. Who am I to try to step up to the plate as a leader? But what I realized I could bring was enthusiasm, and I had a lot of experience in leadership, organizing events, and building spaces throughout college that I shouldn’t count out just because it wasn’t in a professional setting.&lt;/p&gt;
&lt;p&gt;WFH has also made me become more confident in my role, because it made me see an opportunity space for RAD Genders having a real need for the belonging initiative. I realized that in this time of being more disconnected than ever, members of our RIG were looking for community and connection. It was also something which would benefit our other initiatives as well – if I could help improve the sense of belonging in our RIG and giving chances for members to get to know one another, they would feel more comfortable opening up and participating in the various opportunities that we offer. It also opened up channels for us to better deliver things that our members want and need. I started having more conversations with people in our RIGs, and it let me get a more accurate finger on the pulse of what members of our RIG were going through and what they wanted. I’m also additionally excited about the role that I believe RIGs have in just making Riot better – in not just making it better for Rioters, but also ensuring that our products are awesome and appeal to members of our RIG.&lt;/p&gt;
&lt;p&gt;I held a virtual luncheon for a few dozen people to great success, and also have been approved to hold it again with double the budget. I’ve also helped drive engagement in our Slack channel up, and I’ve worked to include returning Rioters from my intern cohort into joining the RIG. I’ve also started opening up about my work for RAD Genders to my team, and two other members of my team have joined the RIG as allies (I’m incredibly grateful for the support my team has given me). I got a shout-out in our recent “retro” over our past year about helping to improve engagement in our RIG!&lt;/p&gt;
&lt;p&gt;Joining the RIG has also helped open the door for other ideas that I’m passionate about, provided opportunities for me to advance my career, and connected me with valuable mentors. I’ve also started an internal group called Fair Play (inspired by the &lt;a href=&quot;https://fairplayalliance.org/&quot;&gt;Fair Play Alliance&lt;/a&gt; and feedback about gender-based discrimination in VALORANT through voice communications), and I’m really about some ways I’d love to take it and also started getting involved with some volunteer work for the player dynamics team. Getting involved with that work also helped me reconnect with &lt;a href=&quot;https://joseph.seering.org/&quot;&gt;Joseph Seering&lt;/a&gt;, the PhD student I did research under when I was an undergraduate, and my interests in moderation and creating and designing online spaces – and also start thinking about perhaps even working someday on a player dynamics team. I also got a sponsored ticket to the Women in Technology conference (which is beginning tomorrow at the time of writing) that I’ll be tuning into for technical talks, networking events, and career advice. But above all, I’ve had a chance to meet some incredible women at Riot. S.L. has been an amazing mentor to me since I came to Riot – she’s given me advice when I was struggling with building a relationship with my manager and getting what I needed out of the relationship, affirming me, and connecting me to others at Riot (I have an 1:1 with a principal software engineer on Riot tomorrow that I’m incredibly excited about, who S.L. introduced me to!). But above all, she’s the one who introduced me to RAD Genders, inspired and invited me to join, and gave me the opportunity to join the leadership team. She and others on the leadership team are also examples to me of where I want to be as I grow in my career. Especially during the NEOM deal and the internal fallout that happened, I remember being completely awestruck and inspired by the response from our RIG leadership, how eloquently yet firmly they conducted themselves and expressed concerns in an extremely tense situation, and also the empathy and concern they showed for members of our RIG. I’d love to be like that one day.&lt;/p&gt;
&lt;p&gt;Also, a random thing that S.L. had told me to do that I’ve found to be incredibly useful, now that at the moment I’m embroiled with the end-of-year performance cycle and writing self-summaries: keeping a brag doc. It’s a place where you can record all that you’ve done, and it’s important that you regularly update it. It helps to build confidence, and is really useful to reference when advocating for yourself. If you don’t have one, I’d recommend starting one.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;post-worlds-and-whats-up-next&quot; class=&quot;level1&quot;&gt;
&lt;h1&gt;Post-Worlds and What’s Up Next&lt;/h1&gt;
&lt;p&gt;There’s just over a month left of this year (also factoring in the Winter break Riot will take for the holidays), and that’ll be a wrap on my first year working. It wasn’t even remotely close to what I had imagined, and a lot of things didn’t go as smoothly as I had hoped. But, I’m feeling pretty optimistic about the future and I’m learning to give myself more credit for what I have accomplished throughout this year. Career-wise, I’m looking to be a better leader in RAD Genders and start aiming for a P2 software engineer promotion. And for this little corner of the internet, I hope I’ll be posting reflections on an actual quarterly cadence, finishing up more of my many drafts on other miscellaneous topics, working more on my functional programming series, posting notes for &lt;em&gt;Designing Data-Intensive Applications&lt;/em&gt;, and starting some notes on introductory CS content or coding interviews.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;the-cat&quot; class=&quot;level1&quot;&gt;
&lt;h1&gt;The Cat&lt;/h1&gt;
&lt;p&gt;I started fostering a cat starting in mid-August, and I’m currently in the process of adopting him. When I first got him, he was injured and emaciated, but he’s since become an incredibly fluffy and affectionate (if not on the anxious side) cat. He has an &lt;a href=&quot;https://www.instagram.com/norton_has_stitches/&quot;&gt;Instagram&lt;/a&gt;!&lt;/p&gt;
&lt;/section&gt;
</description>
        <pubDate>Sun, 15 Nov 2020 00:00:00 -0800</pubDate>
        <link>http://localhost:4000/what-learned-2/</link>
        <guid isPermaLink="true">http://localhost:4000/what-learned-2/</guid>
        
        
        <category>engineering</category>
        
        <category>career</category>
        
      </item>
    
      <item>
        <title>Facebook and the Internet</title>
        <description>&lt;blockquote&gt;
&lt;p&gt;Social. Private. Open. Pick three.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is the title of &lt;a href=&quot;https://jez.io/thoughts/on-leaving-facebook/&quot;&gt;a post&lt;/a&gt; by &lt;a href=&quot;https://jez.io/&quot;&gt;jez&lt;/a&gt;. I’ve mentioned him a few times at this point now on my site, and it’s because I have a lot of admiration for him. He was an upperclassmen at my school who I never really got close to or talked to (when I was a freshman, I was pretty shy and intimidated by all of the incredibly smart people at CMU), but he was my TA for 15-131 Great Practical Ideas for Computer Scientists and left an impact on me. Anyways, he has some very thought-provoking essays and well-written technical articles.&lt;/p&gt;
&lt;section id=&quot;i-got-kicked-off-of-facebook-for-no-clear-reason-today&quot; class=&quot;level1&quot;&gt;
&lt;h1&gt;I got kicked off of Facebook for no clear reason today&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Full disclosure: I’m angry.&lt;/em&gt; I woke up this morning and checked my phone and had a few messages from my friends that were sent while I was asleep. I responded to them, one of them being particularly personal and somewhat urgent to respond to, and noticed that none of my messages were sending. I tried turning off my WiFi to instead use cellular data, but again, no luck. I did a brief look online at Facebook’s server status, saw not much that was out of the ordinary, and decided to move on without much additional thought. It’ll eventually send, I thought to myself. I’ve had issues with my messages being extremely slow or failing to send several times in the past, and figured they would make it through eventually.&lt;/p&gt;
&lt;p&gt;Then I checked my Facebook. Or rather, tried to. When I opened the app on my phone, I was informed that my account had been removed for violating community guidelines and I could fill out a form to repeal the process. I did this (which included uploading a video of my face looking in different directions – left, up, and to the right) and then was met with a screen that simply said they had received my information and that because they had fewer people available due to the coronavirus (COVID-19) pandemic, they might be unable to review my appeal.&lt;/p&gt;
&lt;p&gt;So. As of writing this, I no longer have a Facebook account at all. I’m mostly upset at the sudden loss of Messenger – I’ve deactivated my Facebook account many times in the past, the longest being an 8-month stretch in 2019, but have never left Messenger. It’s always been my primary way of contacting others, and the sudden eviction from the space left me a bit unsure on what to do next. I have an option to download my data, which I’ve put a request in for and am currently waiting for the email to let me know that it’s ready for me.&lt;/p&gt;
&lt;p&gt;To be honest, I’ve thought for a while about wanting to delete my Facebook. I’ve done various intermediate steps, and the closest I’ve been is deactivating Facebook while keeping Messenger. But I’ve never quite pulled the plug, for a number of reasons I just haven’t yet brought myself to overcome. For one, it was convenient and natural to find people that I had met in-person on Facebook simply by using their name: no email address or phone number needed. Just a quick check of their profile picture (that’s looks like what I remember) and mutual friends (a lot of my classmates are their friend, and I met them them at school) was enough to make sure it was the right person. I also was highly involved in extracurricular activities in both high school and college and lead a number of them, and we would coordinate all of our group activities and announcements through Facebook groups. It was also then exceedingly easy to message somebody or start a video call if you needed a quick chat or to sync on an issue. You almost couldn’t run for an officer position in a school organization without having a Facebook profile.&lt;/p&gt;
&lt;p&gt;I’m no longer in school, so those reasons are all mostly gone. I considered deleting my Facebook after graduating, but I considered otherwise after my boyfriend at the time had said it was nice to keep around for people to reconnect with me. I disagreed, and had said that I didn’t think there was much use from conversations with people whose paths I wouldn’t otherwise cross again with except for an errant like. I graduated early, and didn’t tell many people about it. It wasn’t until I was at Fuku Tea and ran into a former student of mine, and as we caught up, I told her I was graduating and would be leaving in about a week, that I changed my mind. Her face immediately became crestfallen, and she cried and told me how much she’d miss me – and also she was upset that she had no idea! I immediately felt pretty terrible, and ended up posting on Facebook that I was graduating and chatted with a number of people who had also drifted off from my mind but I still actively cared about. And it was nice. And in that moment, I was happy I had kept my Facebook profile. Those were interactions I am grateful to have had, and I had them because of Facebook.&lt;/p&gt;
&lt;p&gt;When I was booted off of Facebook today, I was in the middle of some (at least to me) relatively important conversations. A friend had just been laid off from Uber, and we had been reaching out to people to try to see if their company was still hiring in the pandemic and possibly seeing if they could refer him. Most of these people aren’t people I’m particularly close with, and so I don’t have another way to reach them aside from Messenger (no phone numbers, emails, or other platforms). And then, my ex-boyfriend from earlier in college had messaged me with something where he was feeing nostalgic and sad, and I had wanted to send him a comforting message. Telling him that I understood, and despite feeling the way he was, it was good that he was processing those emotions. But all of those messages just had the “pending” icon next to it, and when I reached out to some mutual friends on other platforms to let them know what was going on, most of them had thought I had just inexplicably blocked them. I’ve been critical of Facebook for a while, but the abrupt ending of several ongoing conversations left me flailing and a bit lost.&lt;/p&gt;
&lt;p&gt;I virtually never post on Facebook – the last update I made was announcing that I had graduated in December 2019 (and changing some profile pictures and cover photos). The only other activity I have is tagging friends in memes, and responding to tags. That’s it. I was confused. And I was given absolutely no explanation.&lt;/p&gt;
&lt;p&gt;And then I was angry.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;the-criticisms-i-have-of-facebook-and-big-tech-and-other-internet-spaces-in-general&quot; class=&quot;level1&quot;&gt;
&lt;h1&gt;The criticisms I have of Facebook – and big tech and other Internet spaces in general&lt;/h1&gt;
&lt;p&gt;I mentioned that I’ve long been hesitant about Facebook. But I stuck around. Convenience. It was important for extracurricular activities in school. The stickers are cute. There’s also a number of half-way measures that give you an illusion of reclaiming a bit of your digital presence while still maintaining the things that you didn’t want to lose from quitting the social media conglomerate completely, such as the deactivation feature (and separation of Facebook from Messenger in that regard). But there were a number of things that I wasn’t really comfortable with, and so maybe in a strange way, getting inexplicably kicked from Facebook was what I needed to finally face what I was uncomfortable with and consider jumping ship.&lt;/p&gt;
&lt;section id=&quot;privacy-and-general-ethics&quot; class=&quot;level2&quot;&gt;
&lt;h2&gt;Privacy and general ethics&lt;/h2&gt;
&lt;p&gt;To start with, Facebook is an incredible abuser of privacy. Facebook’s ad-based revenue model involves, like many other technology companies, carefully tracking its users’ behavior both on and outside of the site. Facebook became one of the most valuable companies in the world by perfecting the most successful system for meticulously purveying and collecting user data. It’s no longer surprising to Google for an item and immediately start seeing ads for that item in your Facebook feed or on Instagram (which is also owned by Facebook). And while dodgy privacy records are nothing out of the ordinary in this world, there are a litany of things that tilt Facebook into its own league privacy violations. &lt;a href=&quot;https://salimvirani.com/facebook/&quot;&gt;This article&lt;/a&gt; does a far better job than I ever could on chronicling why exactly Facebook is problematic.&lt;/p&gt;
&lt;p&gt;Instead, I just want to talk a bit about why we should care about privacy. Even if you think you have nothing to hide, you should care. I’d also like to quickly stress the difference between &lt;em&gt;secrecy&lt;/em&gt; and &lt;em&gt;privacy&lt;/em&gt;. For example, let’s use me wanting to go to the bathroom. It is not a secret what I will do in the bathroom. But, privacy is the ability to hide what I am doing in the bathroom from the public eye. Perhaps there are things that do not need to be a secret, but that does not detract from your desire to hide (or have the power to) that information. I remember seeing a number of trailers for movies or shows with a theme of a society built around time (one’s remaining lifespan) as currency. They all have cool animations and show usually these digital tattoos on people’s wrists which display the amount of time they have left to live, and it can be spent in mundane situations (one scene showed people waiting in line and paying five minutes for their daily mocha latte) or be given directly to another person. These shows almost always have this dark undertone of exploitation and eternally young, evil, rich, and powerful people haughtily going about their day while the powerless lurk in society’s underbelly, forgotten, and with tragically short lives left ahead of them. I know this is an incredibly dark tangent, but it’s a bit about how I feel about privacy. It’s a commodity that people take so easily for granted, much like one might consider five minutes of their lifespan, but it’s incredibly important. But trading privacy for convenience is a transaction many of us, including me, regularly make in our lives without a second thought. And it’s something that generally only those who are on the extremes of society have, either the very poor and underprivileged who never had a digital presence to begin with or the upper-class and erudite that have the means and knowledge to reclaim their digital identities online.&lt;/p&gt;
&lt;p&gt;Privacy is fundamentally important because it enables autonomy. The ability of an individual to express themselves selectively by controlling or secluding information allows us to self-determine and control the image that exists of ourselves. Without privacy and without this power, our identities are essentially out of our control and completely at the mercy of others. The reason why we should care about information about ourselves being in the hands of others is because we cannot always trust others to be good actors with our data, and with allowing bad actors to seize our information, we are also ceding parts of our ability to assert ourselves. And even if you supposedly trust the entity to whom you’ve relinquished your data, there’s been massive large-scale data breaches at Facebook which have revealed sensitive information about you to potentially nefarious third-parties. Companies that don’t take all of the measures they can to avoid data breaches are simply irresponsible, and data security is unfortunately often left behind. When Scott Krulcik, another outstanding upperclassmen from CMU, passed away suddenly, Prof. Jean Yang wrote in &lt;a href=&quot;http://jxyzabc.blogspot.com/2018/12/a-tribute-to-scott-krulcik.html&quot;&gt;a tribute&lt;/a&gt; to him something that made me see privacy differently:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;He (Scott) talked about trying to be a good human who wants to help other humans and explained the connection with computer security. In his words, if he’s producing software that helps people in some other way but leaves them vulnerable to identity theft and blackmailing, then the software isn’t really helping people. Here, I thought, was a student who really got it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Facebook has also committed several serious privacy breaches even without data breaches to accidentally expose your information to third-parties, including selling your endorsement to &lt;a href=&quot;https://www.forbes.com/sites/anthonykosner/2013/01/21/facebook-is-recycling-your-likes-to-promote-stories-youve-never-seen-to-all-your-friends/#1057661817aa&quot;&gt;advertisers&lt;/a&gt; and &lt;a href=&quot;https://www.zdnet.com/article/is-facebook-damaging-your-reputation-with-sneaky-political-posts/&quot;&gt;politicians&lt;/a&gt;, &lt;a href=&quot;https://papers.ssrn.com/sol3/papers.cfm?abstract_id=1717563&quot;&gt;tracking things you read on other parts of the Internet&lt;/a&gt;, and they also used to actively prompt other users to snitch on friends who are not using their real names (links are compiled from &lt;a href=&quot;https://salimvirani.com/facebook/&quot;&gt;Sal’s article&lt;/a&gt; mentioned earlier). All of this is for an intricately detailed portfolio of you that’s startlingly accurate, from your political views, age, gender, and sexual orientation, which they then reveal to third-parties that include various companies, governments, and advertisers.&lt;/p&gt;
&lt;p&gt;This widespread dispersal of your information can actively harm you. We’ve all heard the story of the teenager that Target figured out was &lt;a href=&quot;https://www.forbes.com/sites/kashmirhill/2012/02/16/how-target-figured-out-a-teen-girl-was-pregnant-before-her-father-did/#3ad42e5f6668&quot;&gt;pregnant from her purchase history&lt;/a&gt;. But it needs to be more firmly stressed that there is virtually no limit to what these companies can figure out about you – and while it may seem innocuous (if not a bit creepy) for a company to be able to discern your race, your health status, and whether or not you’re pregnant, when combined with the fact that Facebook and other companies are actively selling your information to third parties that include institutions that affect you, this is problematic. Would you like to be denied health insurance because of a company determining that you were likely to start having health problems? What if information about whether you’re pregnant reached a prospective employer (an example which quickly comes to mind is the &lt;a href=&quot;https://www.vice.com/en_us/article/mbmqxq/heres-the-memo-currently-going-viral-at-google&quot;&gt;Google memo last year&lt;/a&gt; alleging pregnancy discrimination)? Facebook has also &lt;a href=&quot;https://theintercept.com/2019/04/03/facebook-ad-algorithm-race-gender/&quot;&gt;selectively not shown housing and employment ads based on race&lt;/a&gt; in the past. We’ve also heard several stories about the police or SWAT teams getting involved erroneously based on Facebook activity, and so while law enforcement already has a record of acting in error, these tools only further inflame those instances. Facebook data is also &lt;a href=&quot;https://www.theguardian.com/world/2013/jun/06/us-tech-giants-nsa-data&quot;&gt;delivered directly to the PRISM program&lt;/a&gt; – government surveillance fueled by social media sites is already ongoing (and for reasons as to why a surveillance-state is suboptimal, there are multitudes of people online who put it better than I ever could, aside from a read of George Orwell’s &lt;em&gt;1984&lt;/em&gt;). This is more than just hypothetical musing. These privacy abuses have real-world consequences that can actively harm you, and are becoming tools to perpetuate continued disenfranchisement of various populations but at an alarmingly efficient pace.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;building-communities-and-bringing-the-world-closer-together&quot; class=&quot;level2&quot;&gt;
&lt;h2&gt;Building communities and bringing the world closer together&lt;/h2&gt;
&lt;p&gt;Facebook’s mission states that they aim to “give people the power to build community and bring the world closer together”. Facebook is aware of how powerful of a presence they have become. It’s extremely pitiful how little they have done to protect those on their platform and stay true to their mission despite knowledge of how widespread their reach is. I won’t delve into the entire debacle that was the 2016 United States presidential election and Facebook’s involvement with Cambridge Analytica, but fake news is a problem that all Internet spaces have a serious problem with (including Reddit, Twitter, etc.). But that being said, mass media so far has served little but to create increasingly insular, polarized, echo chamber communities driven by poorly-cited sensationalist news articles. And these groups are destroying communities and driving the world even further apart.&lt;/p&gt;
&lt;p&gt;I wanted to talk more about my general beliefs about the Internet later in this post, but I did want to reflect a bit on how as a Chinese-American struggling with her identity in middle school, I admired how the Internet had been a beacon of democracy – a mobilizing, powerful force – in times like the Arab Spring and Hong Kong protests. And to see how far it had fallen greatly pained me. People at Facebook had blown the whistle for years (and have been dismissed or left) about potential abuse by those with a political agenda on the platform, and the even greater danger such attempts had given the incredible fan-out factor social media sites have with sharing ideas. People at Facebook had to have known that their site was an immense expanse of kindling ripe for ignition into an uncontrollable inferno, and that smaller fires had already been erupting without serious public attention. And it’s a hard problem. I have sympathy for that. I spent much of my freshman and sophomore years in college doing research in CMU’s &lt;a href=&quot;https://www.cs.cmu.edu/~eheartlab/&quot;&gt;eHeart Lab&lt;/a&gt; looking at the problem of moderating spaces on Twitch and Reddit, and while I’m far from being an expert, I remember at times having moments of brief despair at the problem’s intractability. But it’s a problem that’s still their responsibility, and it’s inexcusable that it wasn’t taken seriously until it had serious impact on the United States’s presidential election (and while interference into one country’s political elections by others is far from being a precedent, it’s notable because it was the United States – which also says something about which countries and political systems we care about). I’ve had a lot of people tell me that elections aren’t a huge deal, but they are – peoples lives are at stake. Whether it’s judicial decisions that establish laws that might harm you, escalations that bring you to the brink of World War III, callous approaches to nuclear proliferation and general diplomacy, or the calling of air strikes that kill innocents, there’s a lot at stake when electing a Commander-in-Chief.&lt;/p&gt;
&lt;p&gt;But also at its core, Facebook is a place for friends and family to connect. I still have no transparency as to why or how my account could have been deleted (I virtually never post or interact with others) and I was given no specifics as to which community guideline I “violated” with my sparing engagement with the platform. Facebook has still been a valuable part of many people’s lives, including mine. And Facebook knows this. After looking on other online platforms like Reddit and Twitter, it’s not just me who has experienced an erroneous removal of my account – and with this, Facebook is removing the ability to connect and share content with loved ones. A mistake is not enough justification. Especially in a time like this, where the world has come to a standstill amid the coronavirus (COVID-19) pandemic and human connection is as precious a resource as ever, this is unacceptable. One of the most plausible explanations for what happened is likely an automated account filtering algorithm that went a bit trigger-happy, but algorithms bear no sense of culpability – only their creators do. We developers frequently have to make conscious decisions about what to prioritize in the algorithms that we write and the ramifications those decisions have. To make the decision that false positives are acceptable to the scale that they are doing, in a company with engineers as talented as those at Facebook, when dealing with things as important as people’s Facebook profiles (which have become instrumental pillars in our social structures), and in a time where social connection is as pertinent as ever, is inexcusable. While this possible explanation for what happened is just speculation (everything really is speculation in terms of how the account deletion happened, because there is no transparency in the process), and there’s a bit of credit if this is indeed an attempt by Facebook to &lt;a href=&quot;https://www.engadget.com/2020-03-04-facebook-reveals-the-ai-tool-it-used-to-ban-6-6-billion-fake-acc.html&quot;&gt;correct for its fake bot problem&lt;/a&gt;, making an algorithm that’s overzealous is valuing ridding a fake bot more than preserving a legitimate user on Facebook’s potentially only tool for social connection at the moment.&lt;/p&gt;
&lt;p&gt;At a time when the world is as far apart as one could imagine it to possibly be, this seems rather disingenuous to Facebook’s mission.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;digital-ownership-and-autonomy&quot; class=&quot;level2&quot;&gt;
&lt;h2&gt;Digital ownership and autonomy&lt;/h2&gt;
&lt;p&gt;But this entire event has also been a jarring reminder of how our digital presence is owned by just a few companies, and how easily we can be eradicated. Facebook, Instagram, and Whatsapp are owned by Facebook. Google owns Gmail and YouTube, as well as a whole suite of office and productivity tools, and Microsoft owns LinkedIn and GitHub. Twitch is owned by Amazon. And in a mistake like what happened to me earlier today, an entire pillar of your digital identity can disappear. This gets somewhat entangled and related to &lt;a href=&quot;https://www.androidauthority.com/digital-tenancy-1120084/&quot;&gt;DRM and digital tenancy&lt;/a&gt; – that despite purchasing goods on Amazon, Netflix, Spotify, Steam, and other platforms, we don’t actually “own” any of it and most end user agreements stipulate that any and all of it could theoretically disappear or become unavailable at anytime and there’s not much you can do about it. But, the point being that much of our digital presence is completely out of our control and at the mercy of several large companies that exploit our data for their profit in ways that could seriously harm us, and much of what we do own is more akin to temporarily renting a space as opposed to true ownership. We don’t control our digital lives. While it’s convenient and we enjoy many things as a result of this trade-off, it’s somewhat disconcerting that an entire part of our identity is essentially no longer something that we have autonomy over.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id=&quot;for-a-better-internet&quot; class=&quot;level1&quot;&gt;
&lt;h1&gt;For a better Internet&lt;/h1&gt;
&lt;p&gt;I know, I know. There’s a lot of things I’ve said so far that are hypocritical – and again, these criticisms are not just limited to Facebook. And a lot of these companies have done quite a bit of good for the world as well. And I’m definitely not saying that all of these companies don’t provide any value (or provide negative value). But there are some seriously problematic records on many of these companies that we should not be excusing so easily. Perfect is the enemy of good. That these issues are not unique or that alternatives might also be problematic doesn’t mean that we shouldn’t be meaningfully engaging with them. Going a shade of gray in the right direction is still progress.&lt;/p&gt;
&lt;p&gt;Some time when I was in middle school, I read John Perry Barlow’s &lt;a href=&quot;https://www.eff.org/cyberspace-independence&quot;&gt;Declaration of the Independence of Cyberspace&lt;/a&gt;. I’m an idealist when it comes to the Internet. I believe in the Internet being a space that transcends national borders and militaries. A world where everybody intrinsically has a place. A place where anyone can express their beliefs without fear of repercussion or being coerced into conformity. A place where concepts of sovereignty, property, identity, distance, and movement are meaningless.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We will create a civilization of the Mind in Cyberspace. May it be more humane and fair than the world your governments have made before.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Barlow wrote this in 1996, before I was even born. I stumbled across his writing when I was an angsty middle school kid who was wrestling with her identity, one of the more confusing ones being my status as a Chinese-American. And the pride I felt for both identities, but also some of the shame. I was young and immature, and highly impressionable. The first time I understood what corruption was and what it looked like, I was angry. I was angry at the city officials I had met in China, at the times that were retroactively explained to me as misappropriated government funds, and at the summers I’ve spent at my maternal grandparent’s place. And those memories that I made there previously were fond ones (although I always hated that I had to bathe using a bucket of water, especially if I wasn’t the first one to wash up that day), but now they were twinged with fury as I became aware of their poverty and compared my time there to the gluttony I had witnessed just earlier in our trip. I was equally as angry when I learned about the United States’s hypocrisy and involvement in the Middle East, destabilization of the region, deposition of leaders, and war crimes that all had been fueled by American hegemony.&lt;/p&gt;
&lt;p&gt;I was an edgy and angsty kid. But then I learned about the Arab Spring. I learned about how the web had been a weapon of resistance, an arbiter of justice, a mobilization tool for the powerless in pursuit of equality and what was right in the world. I learned about protests in Hong Kong and the role the web had played there as well. The web was almost a romantic idea to me, and I was in awe of its power.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://medium.com/matter/the-web-we-have-to-save-2eb1fe15a426&quot;&gt;This article, ‘The Web We Have to Save’&lt;/a&gt; is written by Hossein Derakhshan and I highly recommend reading it. I first saw the article from &lt;a href=&quot;https://jez.io/thoughts/on-leaving-facebook/&quot;&gt;jez’s post&lt;/a&gt;, and in it, the author gives his perspective on how the web had evolved in the 6 years that he was jailed in Iran for being an open web advocate. The author talks about a time that seems so stark to what the Internet is as I know it now, and it made me reflect back on my middle school self and what she would think about the state of the world today.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sometimes I think maybe I’m becoming too strict as I age. Maybe this is all a natural evolution of a technology. But I can’t close my eyes to what’s happening: A loss of intellectual power and diversity, and on the great potentials it could have for our troubled time. In the past, the web was powerful and serious enough to land me in jail. Today it feels like little more than entertainment. So much that even Iran doesn’t take some — Instagram, for instance — serious enough to block.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;I miss when people took time to be exposed to different opinions, and bothered to read more than a paragraph or 140 characters. I miss the days when I could write something on my own blog, publish on my own domain, without taking an equal time to promote it on numerous social networks; when nobody cared about likes and reshares.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;That’s the web I remember before jail. That’s the web we have to save.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There was a time where consumption wasn’t in a stream fueled by likes and shares. The hyperlink was powerful and sought after, and reading was complete and responses were measured. Of course there were trolls, but nothing in comparison to the beasts we have today (what immediately sprouted into my mind were the modern Gods from Neil Gaiman’s &lt;em&gt;American Gods&lt;/em&gt; – they’re well-worshipped today).&lt;/p&gt;
&lt;p&gt;That’s a web that I’d also like to save. While having my Facebook account suddenly deleted has been an interesting if not rather amusing way to be reminded of some of the beliefs I have, it gives me some time to contemplate about what’s next. I have some thinking about what to do when (if) my account gets returned to me.&lt;/p&gt;
&lt;/section&gt;
</description>
        <pubDate>Sun, 24 May 2020 00:00:00 -0700</pubDate>
        <link>http://localhost:4000/facebook/</link>
        <guid isPermaLink="true">http://localhost:4000/facebook/</guid>
        
        
        <category>personal</category>
        
      </item>
    
      <item>
        <title></title>
        <description>&lt;ul&gt;
&lt;li&gt;terraform is a configuration language across many different cloud providers&lt;/li&gt;
&lt;li&gt;mindshare of current state of the world?&lt;/li&gt;
&lt;li&gt;how to interact w/ terraform:
&lt;ul&gt;
&lt;li&gt;basic CLI – look at Terraform Commands (CLI)&lt;/li&gt;
&lt;li&gt;configuration files&lt;/li&gt;
&lt;li&gt;also a back-end for terraform you specify some configuraiton, create infrastructure acc. to that config, then yo ucan evolve and change that as you go so, tf tries to figure out the state of config live right now, what you want, then tries to apply the diff&lt;/li&gt;
&lt;li&gt;so, this is where back-end comes in&lt;/li&gt;
&lt;li&gt;persistence for configuration&lt;/li&gt;
&lt;li&gt;before: just read/write from disk and then checking that into github
&lt;ul&gt;
&lt;li&gt;usually includes credentials, secrets, etc.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;after:
&lt;ul&gt;
&lt;li&gt;checks in a TF state file&lt;/li&gt;
&lt;li&gt;a serialized format of the current state of the world&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;workspaces
&lt;ul&gt;
&lt;li&gt;what if you want to use same config for bunch of diff envs?
&lt;ul&gt;
&lt;li&gt;can split it out… or, use a workspace!&lt;/li&gt;
&lt;li&gt;each workspace gets its own name + TF space&lt;/li&gt;
&lt;li&gt;then available as an env variable&lt;/li&gt;
&lt;li&gt;terraform worksapce my new env, then terraform apply&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;vs. kubernetes? kubenetes is a coordiantion management system for docker jenkins – still has to be configured; tf is general configuration&lt;/li&gt;
&lt;li&gt;tf config
&lt;ul&gt;
&lt;li&gt;takes directories as a primitive&lt;/li&gt;
&lt;li&gt;usually have a main.tf that describes the stuff you’re gonna configure (not actually required?)&lt;/li&gt;
&lt;li&gt;vars.tf – entire thing is a function; vars.tf is the arguments to the function
&lt;ul&gt;
&lt;li&gt;should be things you’ll change on a workspace/per-env basis&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;diving into main.tf
&lt;ul&gt;
&lt;li&gt;format: keyword, optional string, curly braces&lt;/li&gt;
&lt;li&gt;inside-out from normally how you think about data and code&lt;/li&gt;
&lt;li&gt;much more declarative – this is what you expect to exist after tf has done its job
&lt;ul&gt;
&lt;li&gt;nothing imperative or how to do it&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;tf is not forward-compatible&lt;/li&gt;
&lt;li&gt;most common thing interacted with is a resource
&lt;ul&gt;
&lt;li&gt;could be anything – thing you want to configure or create&lt;/li&gt;
&lt;li&gt;can find a billion ones for aws
&lt;ul&gt;
&lt;li&gt;security groups, auto balancers, ecs, ec2, s3 buckets, cloudwatch&lt;/li&gt;
&lt;li&gt;resource “aws_security_group” “sg” {} resource [type] [var name] {}&lt;/li&gt;
&lt;li&gt;aws_security_group from aws provider&lt;/li&gt;
&lt;li&gt;comes separately from core terraform&lt;/li&gt;
&lt;li&gt;don’t use terraform less recent than 10&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;can also do standard variable interpolation &lt;code&gt;${VAR_NAME}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;a variable has to be pre-defined before used, like in the vars.tf file&lt;/li&gt;
&lt;li&gt;tf tries to be strongly typed – will fail sometimes, but it’s attempting!&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 18 Apr 2020 00:00:00 -0700</pubDate>
        <link>http://localhost:4000/terraform/</link>
        <guid isPermaLink="true">http://localhost:4000/terraform/</guid>
        
        
      </item>
    
      <item>
        <title>What I Learned (and Still Don't Know) #1: Q1 2020</title>
        <description>&lt;p&gt;Working is strange. I packed my life as I knew it into a car and drove across the country in a few days, far away from family, friends, and the places I’ve known as “home” for two decades and started anew. It was comforting to see everybody I remembered from my internship again, but also I felt for perhaps the first time in my life the responsibility of taking care of oneself and chartering my own path forward – and I was on my own. I’ll always look back fondly at CMU – despite the burnout and stress, it was a place I stretched and ultimately grew at. And all of the lovely people I met along the way have a special place in my heart. But there’s no more classes. I don’t walk into work and receive a syllabus that tells me what I’ll learn in the next few months, and there’s no clear way for me to measure my progress along those key concepts. I’m not in school anymore.&lt;/p&gt;
&lt;p&gt;Which was a bit scary. I was afraid of stagnating. I wanted to keep hurtling forward and learning as much as I can, and how easy it was to fall into a routine at work made me slightly afraid.&lt;/p&gt;
&lt;p&gt;Some time ago, I read &lt;a href=&quot;https://overreacted.io/things-i-dont-know-as-of-2018/&quot;&gt;this post by Dan Abramov on things he didn’t know as of 2018&lt;/a&gt; and I loved it. I was a TA for 15-150 at that time, and I related a bit to that sense of people (particularly students and underclassmen) assuming that I knew far more than I really did. I had made a note that I wanted to make a post like it myself, but never got around to it.&lt;/p&gt;
&lt;p&gt;Now that I’m working, I’ve decided that I’d like to try and post some sort of regularly-cadenced reflection post discussing both things I’ve learned and things I have yet to fully understand. I’m painfully aware of how little I know especially as a beginner software engineer and imposter syndrome is absolutely something I experience every day – and then there’s also the harsh swing of sometimes falsely feeling like I’ve fully understood something (Dunning-Kruger effect) in this cycle of conscious and unconscious incompetence. And one day I’d love to reach conscious and eventually unconscious competence. But I think articulating concretely a few things I wanted to focus on that I’ve realized I didn’t know as of yet, and also celebrating the things I have learned is valuable in providing structure for self-directed learning. This first one will focus on a lot of soft skills and adjusting to the workplace to try to be an effective engineer, as I’ve mostly just been familiarizing myself and trying to learn as much as I can.&lt;/p&gt;
&lt;section id=&quot;adjusting-to-full-time&quot; class=&quot;level1&quot;&gt;
&lt;h1&gt;Adjusting to Full-Time&lt;/h1&gt;
&lt;p&gt;Coming back as a full-time software engineer is different from when I was an intern. I didn’t come in with an end date and am not a happy-go-lucky college student anymore. It’s the real deal this time. I don’t have an intern mentor who is responsible for me, an entire almost “dorm” of fellow interns I’d come back from work to, or the University Program anymore. In the summer I mostly talked to my intern mentor and my tech lead on a day-to-day basis. My intern mentor gave me a list of people to have 1:1s with and always gave me feedback on how I was doing. He was always checking in to see if I was blocked and I could just wheel over at any time and get affirmation that I was on the right track.&lt;/p&gt;
&lt;p&gt;I didn’t realize how much I had gotten used to that. I remember on my first day, I had noticed a small error that was really simple to fix and I messaged my tech lead asking if I could fix it.&lt;/p&gt;
&lt;p&gt;…wait, what? If that made you pause, same – I’m not really sure either why I asked him if I could fix something which took one line of code to change and caused our build to fail, and would thus block any other engineers from working on the product. The need was there and the fix was within my capability, but I still felt a need to ask for permission. That made me stop and think for a second, and I realized the following two improvement areas I needed to work on from my internship:&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;Syncing with the team and understanding what people are working on and what our priorities are. Because I was an intern and now am a new engineer, and my team owns a wide array of products, a lot of check-ins at stand-up, meetings, or sprint goals covered things I wasn’t super familiar with. So, I often felt like I wasn’t sure if what I was working on was the “right thing” to be working on at that time. I needed to do a better job at following along with my team’s priorities (instead of relying on an intern mentor I no longer had to worry about all of that for me), but also &lt;em&gt;be confident&lt;/em&gt; in my reasoning. Why did I want to fix this? It was a bug that somehow made it onto master and was causing the master branch build to fail. This is blocking to any other work on this product which is currently a key sprint goal. I knew why, but somehow I still doubted myself.&lt;/li&gt;
&lt;li&gt;I needed to be more comfortable with the code review process. My change was a one-liner (the bug was very simple), and I sent a message where I explained what I did and essentially asked my tech lead if what I had done was correct. But that’s what the code review process is for. I can open a PR and have other people look at it – that was the place for this kind of feedback. If I was unsure about how to start or approach a problem, I could ask a question about that, but if I had a solution that I believed was working well, I should just open a PR and give feedback. I think by nature of being a less-experienced developer, I felt weird about approving PRs when I was an intern (something which I’ll look at and think “LGTM!” and approve would probably have a million errors that my intern mentor might catch) and that maybe carried over when opening PRs as well.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It’s okay to not know things. I try to work on being an active beginner though, like say making a goal of trying to make sure that I don’t get repeat comments on my PRs. I’m trying to ask questions when I don’t understand things, or reach out to SMEs on certain products that I don’t know much about. I’ve realized that everybody on my team is super open to answering questions, and by building relationships with other engineers on my team besides my tech lead and my intern mentor, I’ve been able to learn a lot more. F.B. was an engineer who was there last summer but I never talked that much with, and he’s been a great mentor in general software engineering processes and front-end engineering. H.S. is an omniscient guru re: everything systems and back-end services, and always asks the right questions in every meeting. M.H. was an engineer who joined while I was gone, but has been having me pair with him on setting up CI/CD for some of our new products. M.K. helped me onboard onto our database product and has also just been a person to bounce ideas off of. I’ve also started reaching out to engineers on our sister team in St. Louis, MO about their products and what services they use and how they interact with other products on Esports Digital as a whole. I also now have 1:1s with leadership on my team, especially my team captain/product manager (who is &lt;em&gt;awesome&lt;/em&gt; by the way – I admire him a lot) that have helps me stay aligned with our team’s mission. L.A. is another person who also listened to me when I had concerns about my relationship with my manager and helped me encouraged me to take it seriously and reach out to others, and part of why I’m comfortable and happy with where I am right now on my team is absolutely because of him looking out for me.&lt;/p&gt;
&lt;p&gt;I’ve also worked on being confident in what I know. I had a meeting earlier about trying to change our data model for matches and broadcasts, and I was surprised by how much I knew. I was able to talk about how the problem impacted four different products and how they interacted with each other, what engineering changes were needed, and why those changes were important. And I was able to talk with people who were more senior than me! I definitely left that meeting feeling like it was a win.&lt;/p&gt;
&lt;section id=&quot;s&quot; class=&quot;level2&quot;&gt;
&lt;h2&gt;1:1s&lt;/h2&gt;
&lt;p&gt;1:1s are an essential and powerful tool for engineers. You can leverage them in a number of ways: to get to know your teammates and build rapport, give and receive feedback, discuss technical problems, ask questions, follow-up from a meeting earlier, or just sync on work – it’s up to you how you want to use the time. The important part is that you and your coworker (whether they are a peer or your manager) set aside that certain amount of time for the other person.&lt;/p&gt;
&lt;p&gt;I was used to having 1:1s, but I hadn’t thought very much about how to make my 1:1s &lt;em&gt;effective&lt;/em&gt;. A lot of my 1:1s from the summer were mostly just to get to know my coworkers. But, I found myself when I first came back (and pretty much already knowing everybody!) being unsure what to use my 1:1s for. I talked a bit with my manager about this, and he had encouraged me to think of it as time that my coworkers are making for me, and I should use that time to try to help make progress towards my goals (although just chatting and socializing is actually a productive thing in and of itself for building rapport). He had linked me &lt;a href=&quot;https://www.manager-tools.com/2005/07/the-single-most-effective-management-tool-part-1&quot;&gt;this podcast series&lt;/a&gt; about 1:1s, and I also went and did some of my own research. So far, &lt;a href=&quot;https://about.gitlab.com/handbook/leadership/1-1/&quot;&gt;this article&lt;/a&gt; is one that I really enjoy and wanted to especially emphasize a few tips that I started employing that I believe helped me quite a bit with making my 1:1s more effective.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Coming in with an agenda.&lt;/em&gt; This was definitely the most important part. Too frequently I hopped into a 1:1 without a real sense of what I wanted to talk about, and when we actually started our 1:1 it might fizzle out because I didn’t have any specific things in mind to talk about.
&lt;ul&gt;
&lt;li&gt;Once I had set my 120 Day Plan, a tool we use for settings goals over the next 120 days that are aligned with what we want to achieve from a team perspective and our products, and for personal growth, I could ask questions during my 1:1s that would help me work towards those. For example, one of my goals was to be able to be in the on-call rotation and so if I had a 1:1 with an SME for a product we own but I don’t know about, I could ask them to walk me through the basic architecture of the product, how data flows through the product, what services it uses, and how it interacts with other products (dependencies or outputs).&lt;/li&gt;
&lt;li&gt;As I did my work from day-to-day, there might be questions I have or feedback I’ve gotten in PRs I’d like to dive a bit deeper in or get some thoughts on how to approach. For example, I had a 1:1 where I asked F.B. after getting some feedback on a PR about what were and weren’t good unit tests about unit testing in general and how to approach it. He gave me the following articles to read that were helpful:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.sitepoint.com/javascript-testing-unit-functional-integration/&quot;&gt;JavaScript Testing: Unit vs. Functional vs. Integration Tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/javascript-scene/mocking-is-a-code-smell-944a70c90a6a&quot;&gt;Mocking is a Code Smell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.stevensanderson.com/2009/08/24/writing-great-unit-tests-best-and-worst-practises/&quot;&gt;Writing Great Unit Tests: Best and Worst Practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mtlynch.io/good-developers-bad-tests/&quot;&gt;Why Good Developers Write Bad Unit Tests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Sometimes it’s just to get to know somebody. I had never really talked with M.H. because he had joined after I left, so we had a 1:1 just to get to know one another. Especially now that we’re all working remotely because of Covid-19, it’s nice to check in and see how everybody else is doing.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;If there’s sensitive feedback that doesn’t really seem to have an appropriate place to bring up, a 1:1 is a good place to give it. My manager and I had some issues that we never talked about from when I was being hired with my return offer, and our 1:1 where we talked about that and how I had felt 1) made me feel a lot more relieved in that I was being listened to, shown empathy, and taken seriously and 2) we started focusing more on relationship building (as opposed to strictly performance and engineering-related things).&lt;/li&gt;
&lt;li&gt;My manager told me this and it’s also what was in the article, of the 1:1 should be seen as the report’s meeting. The agenda and tone is set by them, by you as the individual contributor – and if there’s any issues that are bothering you and not letting you do your best work, this is a good time for you to prioritize that and start working towards a solution with others.&lt;/li&gt;
&lt;li&gt;1:1s should ideally be short and regular – it’s better to have short meetings that don’t have a very packed agenda vs. going for a while without openly talking face-to-face.&lt;/li&gt;
&lt;li&gt;This is also a good time to set and manage expectations. What does your manager expect of you, the direct report, and what do you have for them? It’s critical that these expectations match one another.&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id=&quot;on-having-a-manager&quot; class=&quot;level2&quot;&gt;
&lt;h2&gt;On Having a Manager&lt;/h2&gt;
&lt;p&gt;There were many things I learned while I was an intern, but how to work with and have a manager is not one of them. My manager left my team during my internship and my hiring manager (who later became my manager when I joined full-time) was somebody I didn’t know very well. I then also had some misunderstandings with my current manager when I was being hired that made me feel not fully trustful. And, he is also a remote manager! So figuring out and navigating having a manager was challenging. I’m definitely still working on this part, but I’m starting to feel happy that I’m making progress on my relationship with my manager.&lt;/p&gt;
&lt;p&gt;There were two important things that happened. For one, I acknowledged that I had some residual distrust from before I was hired. Then, I talked to others about it. I talked to people who had become mentors for me on my team and also to my team captain, who all took it very seriously and helped give me some next steps to take. They also helped open the avenue for having that discussion with my manager that I otherwise felt a bit uncomfortable bringing up, and it was received very well – my manager took it seriously and it made me feel cared about.&lt;/p&gt;
&lt;p&gt;In talking with other people, I got a few pieces of advice that I thought were really helpful.&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;Your manager should be your biggest advocate. They should be the one who is advocating for you to get a promotion or reach that next level, or if you’re not quite there yet, help you get there. They shouldn’t feel like an obstacle. They should be there to help you grow and be effective at your job.&lt;/li&gt;
&lt;li&gt;One of the things I had issues with regarding my return offer was negotiating the compensation and conversations I had about it. And that’s a really hard thing to talk about, especially when you’re completely new and, well, honestly already feeling really overpaid and are grateful for what you’re receiving. I’m not some software hot-shot who is going to revolutionize the country. And I’m basically being paid more than what my parents make straight out of college. But when I found out that to best of my understanding, I was being paid quite significantly less than others in my position, I wasn’t sure how to approach it and justify asking for more. There was a senior product manager who gave me this advice though about how to think about compensation: &lt;em&gt;it is the most objective way a company can measure and tell you how much they value you.&lt;/em&gt; So if your pay is significantly lower than others in your role, you can talk about and explain that the reason why isn’t because you necessarily need more money (especially in a field like software engineering where pay is already pretty high) but because you are being valued less than your peers. Your work is being valued less than your peers’ work. And your manager and higher-ups should take that seriously.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Additionally, and this is also in that last part of what I said in the earlier section about 1:1s, it’s important to manage expectations. Understand what your manager expects of you, and make sure your manager understands what you expect of them. Give feedback about this! If there are things that should be in your manager’s expectations for you, let him/her know! If there are things that they are expecting for you that you believe they shouldn’t be, also let them know. What’s important is that your expectations are aligned. Going along this, be explicit in asking your manager for what is looked for to reach the next level (potentially ask for it in writing). Whenever formal performance conversations take place, nothing should be a surprise as there should be an ongoing stream of feedback between you both, and you should know what you had to accomplish to get that next promotion.&lt;/p&gt;
&lt;p&gt;That’s hard. It’s easy to say, and I’m definitely still figuring out how to do the above.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;working-on-a-team&quot; class=&quot;level2&quot;&gt;
&lt;h2&gt;Working on a Team&lt;/h2&gt;
&lt;p&gt;Working on a team is very different from college (and group projects). It’s important to stay in communication with your team – there are things you do that could be blocking others, things other are doing that are blocking you, and knowledge that they have that can solve issues that would take you days searching on your own but less than a ten-minute conversation with them. There’s also places you can go and help others too – knowledge and experience you’ve accrued whether you realize it or not that others would benefit from learning about.&lt;/p&gt;
&lt;p&gt;I think one of my the main things that helped me be a better team member was more mindfully participating in team rituals. For example, in stand-up, keeping tabs and actually understanding what other people were working on and how it relates to your work. Are there dependencies between your tasks and theirs? Have you worked on something like it before? Also, if there’s things they’re blocked on that isn’t a task you’re working on but you have expertise in, can you help them? Are there things other people are working on that you want to learn about? The purpose of stand-up is to make sure everybody is still synced and making progress towards sprint goals, so actively keep that in mind as you listen and give updates yourself! We typically go by each person who talks about what they did the previous day, what they’ll be doing today, and any announcements. Then, we go through any emergent issues that have to be triaged.&lt;/p&gt;
&lt;p&gt;Going through emergent issues (and also issues that happen during on-call rotations) and discussing issues is useful for helping others understand the issue (and understanding it yourself), so again, actively listening and contributing when you can is important to helping your team be more effective. I also am new to pair programming but I’m a huge fan. Essentially, two engineers pair up and work on a problem together – either physically at the same desk or, now that we’re all remote, with one person coding and sharing their screen. You can talk through how to solve the problem and fill in each other’s knowledge gaps, and also if you’re a new engineer paired with a more experienced developer, it’s a good chance to ask questions as well.&lt;/p&gt;
&lt;p&gt;On the topic of asking questions, ask them! Chances are that other people have the same one and it’ll clarify an issue for everybody, or it’s a consideration people hadn’t thought about and you asking that question might save lots of more painful hours having to pivot or address that issue down the road.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;day-plans&quot; class=&quot;level2&quot;&gt;
&lt;h2&gt;120 Day Plans&lt;/h2&gt;
&lt;p&gt;Another challenge is when working at a company that’s organized around product, your first priority is working on the products that your team is prioritizing and as you work, finding space to learn and grow as an engineer. If you wanted to learn about, say, database systems, you’d need a product that used that service. It’s Product is king. A tool which helps me navigate finding ways to grow that align with product goals is with 120 Day Plans which I mentioned earlier. I also just wanted to publicly share a summary of my 120 Day Plans here (and they can pivot – your team is agile, and therefore your goals should be as well):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Objective: Being development of [redacted product]
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;Paired with another engineer to do exploratory work for [redacted products]&lt;/li&gt;
&lt;li&gt;Working prototype completed for [redacted product]&lt;/li&gt;
&lt;li&gt;Give feedback to three Esports Digital RFCs&lt;/li&gt;
&lt;li&gt;Own a piece of production on [redacted product]&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Objective: Support current products
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;Be able to be in the on-call primary rotation for Esports Digital&lt;/li&gt;
&lt;li&gt;Participate in on-boarding trainings with DNA products (our sister team) and have 1:1s to learn about DNA products&lt;/li&gt;
&lt;li&gt;Schedule 1:1s with Gateway (my specific subteam) members to learn about products I haven’t touched yet&lt;/li&gt;
&lt;li&gt;Paired with H.S. on [redacted product]&lt;/li&gt;
&lt;li&gt;Become comfortable with CI/CD concepts&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Objective: Career and personal development
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;Read a craft book&lt;/li&gt;
&lt;li&gt;Regularly give feedback to Esports Digital products (RFCs, PRs, design reviews)&lt;/li&gt;
&lt;li&gt;Continue work on hobbies (writing, drawing, music)&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Objective: Diversity &amp;amp; Inclusion and RAD Genders
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;Continue to drive RAD Genders to have successful Q1/Q2 events&lt;/li&gt;
&lt;li&gt;Hold 3 RAD Genders events (RAD Reads, listening groups, socials)&lt;/li&gt;
&lt;li&gt;Get greenlit for the Women in Gaming bootcamp&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id=&quot;other-ways-im-trying-to-improve-on-being-an-engineer&quot; class=&quot;level1&quot;&gt;
&lt;h1&gt;Other ways I’m trying to improve on being an engineer&lt;/h1&gt;
&lt;p&gt;I started a reading group to go through &lt;em&gt;Designing Data-Intensive Applications&lt;/em&gt; by Martin Kleppmann. We meet every other week after reading a chapter, and ask questions or share knowledge. We’re two chapters in, and I’ve been able to learn a lot and get a lot of insight from the more experienced developers on my team: I learned about Chaos Monkey, some services in our tech stack that I never knew about (an events repeater and why it was implemented), and also a lot of tools and services I’ve never even heard of before.&lt;/p&gt;
&lt;p&gt;I’m scheduling 1:1s with SMEs to get high-level perspectives on different products, and also trying to sit down and read code. Reading code is an interesting skill because it’s not something I ever learned in school. I wrote a lot of code. Sometimes when I was helping others debug, I’d read their code (especially as a TA), but those are trivially short programs compared to the codebase for an entire product. And the caliber of code is different too – I’m trying to learn to appreciate robust techniques and code that’s written &lt;em&gt;well&lt;/em&gt; – and what that means. It’s also easy sometimes to go down a rabbit hole of files. I’ve just been given advice to try to start where the program execution begins (like a &lt;code&gt;main.java&lt;/code&gt; file or &lt;code&gt;index.js&lt;/code&gt;) and slowly depth-first from there. If I ever get lost, go back to that starting spot to regain your surroundings! Also, first doing a quick tour of high-level how things are working can help you mentally construct a map of where you are right now in the product. A tip that somebody gave me was try to understand how data flows through the product. Where does it enter? How is it modified? And, how is it passed along to other services? Reading code is not an intuitive thing (it’s not like a book I’d casually sit down with in the evening) but it’s one of the most recommended ways to get familiar with a product and grow as an engineer.&lt;/p&gt;
&lt;section id=&quot;some-things-ive-done&quot; class=&quot;level2&quot;&gt;
&lt;h2&gt;Some Things I’ve Done&lt;/h2&gt;
&lt;p&gt;I joined at a weird time – it was right after we had just released a new product, and before we were starting on our next projects. So, I wasn’t able to sit and gain ownership of a piece of code yet, but I did a lot of work to help polish our product and get it over the finish line. I took over ownership of a component from another engineer, added a tiebreaker functionality, and worked on logic for game and match editability (which included touching our back-end service and our API) in addition to a bunch of emergent issues. The product is used by tournament operators and is essential for tournaments to run, and so we ironed out bugs as there were urgent needs coming up from week-to-week as games were played. I’ve helped also finish up our unit test coverage for the code base and learned a lot about our tournament recursive graph structure.&lt;/p&gt;
&lt;p&gt;I also had my first (significantly long) PR without needed changes! It felt nice! But there were issues that were found later on by QA. It’s okay, that’s the purpose of the reviewing system.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;things-i-still-dont-know-as-of-q1&quot; class=&quot;level2&quot;&gt;
&lt;h2&gt;Things I Still Don’t Know (as of Q1)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Kafka&lt;/li&gt;
&lt;li&gt;Kinesis&lt;/li&gt;
&lt;li&gt;AWS stuff: ECS, EC2, DynamoDB, Redis&lt;/li&gt;
&lt;li&gt;CI/CD: Terraform and DockerJenkins&lt;/li&gt;
&lt;li&gt;Self-advocacy&lt;/li&gt;
&lt;li&gt;Negotiating&lt;/li&gt;
&lt;li&gt;Fully understanding good test writing&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id=&quot;rad-genders-leadership-and-facilitation&quot; class=&quot;level1&quot;&gt;
&lt;h1&gt;RAD Genders: Leadership and Facilitation&lt;/h1&gt;
&lt;p&gt;I’ve also become a strike team leader for our belonging initiative on RAD Genders, a Rioter Identity Group (RIG – it’s like Employee Resource Groups at other companies) that’s focused on being a resource for cisgender women, non-binary folks, and transgender folks of all genders. We’re focused on three key initiatives this year: belonging, mentorship, and representation. So my goal is to work on building a strong sense of community and help forge create opportunities for people in our identity group to forge bonds with one another.&lt;/p&gt;
&lt;p&gt;And, it’s been kind of scary. I’m so new, and I don’t have a ton of experience with being a leader among people who are all older and more experienced than me. I’m a newcomer to the company and I’m painfully aware of how little I know. I ran a reading group, and got a lot of feedback on trying to be a good facilitator and better leader.&lt;/p&gt;
&lt;p&gt;This work is still new for me and we’re also pivoting given that we’re all working remotely now. But, there was one piece of advice I was given about facilitating that was really useful: validate others, and ask questions. And repeat. Validate and ask questions.&lt;/p&gt;
&lt;p&gt;As a sort-of-related-note, &lt;a href=&quot;https://www.thecut.com/2015/08/why-we-need-older-women-in-the-workplace.html&quot;&gt;here’s an article&lt;/a&gt; that I thought was really insightful and also helps motivate me for why having a community in our identity group is important.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;a-poem&quot; class=&quot;level1&quot;&gt;
&lt;h1&gt;A Poem&lt;/h1&gt;
&lt;p&gt;A former professor of mine, Prof. Grama, emailed me this poem that I think everybody would enjoy in this current time:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Praise Song for the Day&lt;/em&gt; by Elizabeth Alexander&lt;/p&gt;
&lt;p&gt;(A Poem for Barack Obama’s Presidential Inauguration)&lt;/p&gt;
&lt;p&gt;Each day we go about our business, walking past each other, catching each other’s eyes or not, about to speak or speaking.&lt;/p&gt;
&lt;p&gt;All about us is noise. All about us is noise and bramble, thorn and din, each one of our ancestors on our tongues.&lt;/p&gt;
&lt;p&gt;Someone is stitching up a hem, darning a hole in a uniform, patching a tire, repairing the things in need of repair.&lt;/p&gt;
&lt;p&gt;Someone is trying to make music somewhere, with a pair of wooden spoons on an oil drum, with cello, boom box, harmonica, voice.&lt;/p&gt;
&lt;p&gt;A woman and her son wait for the bus. A farmer considers the changing sky. A teacher says, Take out your pencils. Begin.&lt;/p&gt;
&lt;p&gt;We encounter each other in words, words spiny or smooth, whispered or declaimed, words to consider, reconsider.&lt;/p&gt;
&lt;p&gt;We cross dirt roads and highways that mark the will of some one and then others, who said I need to see what’s on the other side.&lt;/p&gt;
&lt;p&gt;I know there’s something better down the road. We need to find a place where we are safe. We walk into that which we cannot yet see.&lt;/p&gt;
&lt;p&gt;Say it plain: that many have died for this day. Sing the names of the dead who brought us here, who laid the train tracks, raised the bridges,&lt;/p&gt;
&lt;p&gt;picked the cotton and the lettuce, built brick by brick the glittering edifices they would then keep clean and work inside of.&lt;/p&gt;
&lt;p&gt;Praise song for struggle, praise song for the day. Praise song for every hand-lettered sign, the figuring-it-out at kitchen tables.&lt;/p&gt;
&lt;p&gt;Some live by love thy neighbor as thyself, others by first do no harm or take no more than you need. What if the mightiest word is love?&lt;/p&gt;
&lt;p&gt;Love beyond marital, filial, national, love that casts a widening pool of light, love with no need to pre-empt grievance.&lt;/p&gt;
&lt;p&gt;In today’s sharp sparkle, this winter air, any thing can be made, any sentence begun. On the brink, on the brim, on the cusp,&lt;/p&gt;
&lt;p&gt;praise song for walking forward in that light.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/section&gt;
&lt;section id=&quot;the-image&quot; class=&quot;level1&quot;&gt;
&lt;h1&gt;The Image&lt;/h1&gt;
&lt;p&gt;I love SOMISOMI. My go-to order is ube ice cream with a custard-filled taiyaki. I ate it almost every week: truly the food of this quarter.&lt;/p&gt;
&lt;/section&gt;
</description>
        <pubDate>Thu, 16 Apr 2020 00:00:00 -0700</pubDate>
        <link>http://localhost:4000/what-learned-1/</link>
        <guid isPermaLink="true">http://localhost:4000/what-learned-1/</guid>
        
        
        <category>engineering</category>
        
        <category>career</category>
        
      </item>
    
      <item>
        <title>Functional Programming Part 2: Evaluation, Functions, and Patterns</title>
        <description>&lt;p&gt;In my earlier post, I talked about the basic of SML syntax and tried to give a bit of a set-up about functional programming in general. It’s unclear to me how effective it was, so please send me feedback on how to improve or what wasn’t clear (I’m already rereading and musing about various things I think I could have included, or better ways to explain a concept). It’s also been a while since I taught, so as I’m writing these up I’m revisiting and reviewing topics myself.&lt;/p&gt;
&lt;p&gt;Anyways, so here’s the next part. This will review and go a bit deeper into evaluation and two key topics, extensional equivalence and referential transparency, and then will introduce patterns and pattern-matching.&lt;/p&gt;
&lt;section id=&quot;video-tbd&quot; class=&quot;level1&quot;&gt;
&lt;h1&gt;Video (TBD)&lt;/h1&gt;
&lt;p&gt;Yes, yes. One day.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;on-to-the-write-up&quot; class=&quot;level1&quot;&gt;
&lt;h1&gt;On to the write-up!&lt;/h1&gt;
&lt;section id=&quot;definitions&quot; class=&quot;level2&quot;&gt;
&lt;h2&gt;Definitions&lt;/h2&gt;
&lt;section id=&quot;evaluation-revisited&quot; class=&quot;level3&quot;&gt;
&lt;h3&gt;Evaluation (revisited)&lt;/h3&gt;
&lt;p&gt;We talked last time about expressions being the most basic “unit” in SML – and talked about how declarative programming differed from imperative programming in that these expressions were not instructions, but mathematical statements. Expressions may or not be well-typed, and well-typed expressions may or may not evaluate to a value. This evaluation generally takes place left-to-right and occurs eagerly. For example, &lt;code&gt;3 + 4&lt;/code&gt; evaluates to &lt;code&gt;7&lt;/code&gt;, &lt;code&gt;3 div 0&lt;/code&gt; has well-typed and has type &lt;code&gt;int&lt;/code&gt; but does not evaluate to a value (instead, this expression raises an exception).&lt;/p&gt;
&lt;p&gt;We used this syntax, &lt;code&gt;=&amp;gt;&lt;/code&gt;, to notate “stepping to”. So, this is honestly god-awful to write in Markdown (as opposed to in LaTeX) but alas – let’s talk a bit more formally about this. We write &lt;code&gt;e&lt;/code&gt; for some arbitrary expression in SML and &lt;code&gt;v&lt;/code&gt; for some arbitrary value (which are also expressions!). And, we use the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;e =&amp;gt;_v v&lt;/code&gt; means that expression &lt;code&gt;e&lt;/code&gt; evaluates to value &lt;code&gt;v&lt;/code&gt; (here I’m using the symbol &lt;code&gt;=&amp;gt;_v&lt;/code&gt; – I’m trying my best)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;e =&amp;gt;_1 e'&lt;/code&gt; means that expression &lt;code&gt;e&lt;/code&gt; reduces to expression &lt;code&gt;e'&lt;/code&gt; in 1 step&lt;/li&gt;
&lt;li&gt;&lt;code&gt;e =&amp;gt;_k e'&lt;/code&gt; means that expression &lt;code&gt;e&lt;/code&gt; reduces to expression &lt;code&gt;e'&lt;/code&gt; in &lt;em&gt;k&lt;/em&gt; steps&lt;/li&gt;
&lt;li&gt;&lt;code&gt;e =&amp;gt; e'&lt;/code&gt; means that expression &lt;code&gt;e&lt;/code&gt; reduces to &lt;code&gt;e'&lt;/code&gt; in 0 or more steps&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What we mean by steps here is a step in operational semantics, and is &lt;em&gt;not&lt;/em&gt; what the actual operations are in SML. We’ll mostly just write &lt;code&gt;e =&amp;gt; e'&lt;/code&gt; for reduction when we’re concerned with correctness (and not looking at complexity, as we won’t be concerned with the number of steps the reduction took).&lt;/p&gt;
&lt;p&gt;We also talked about how a value was an expression, but an expression was not necessarily a value. Let’s also look here at the relationship between reduction and evaluation. If &lt;code&gt;e =&amp;gt;_v v&lt;/code&gt;, then that implies that &lt;code&gt;e =&amp;gt;_1 e' =&amp;gt;_1 ... =&amp;gt;_1 v&lt;/code&gt; and vice versa. Also, values evaluate to themselves in 0 steps – so, we can write &lt;code&gt;v =&amp;gt; v&lt;/code&gt; (trivially) but there is no such &lt;code&gt;e&lt;/code&gt; where &lt;code&gt;v =&amp;gt;_1 e&lt;/code&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;extensional-equivalence&quot; class=&quot;level3&quot;&gt;
&lt;h3&gt;Extensional Equivalence&lt;/h3&gt;
&lt;p&gt;Let me first give the formal definition of extensional equivalence. We say that two expressions, &lt;code&gt;e&lt;/code&gt; and &lt;code&gt;e'&lt;/code&gt; of the same type are extensionally equivalent whenever one of the following is true:&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;Evaluation of &lt;code&gt;e&lt;/code&gt; produces the same value as the evaluation of &lt;code&gt;e'&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Evaluation of &lt;code&gt;e&lt;/code&gt; and &lt;code&gt;e'&lt;/code&gt; both loop forever.&lt;/li&gt;
&lt;li&gt;Evaluation of &lt;code&gt;e&lt;/code&gt; raises the same exception as does the evaluation of &lt;code&gt;e'&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Extensional equivalence is an equivalence relation on well-typed SML expressions of the same type. So, for example, &lt;code&gt;3 + 7&lt;/code&gt; and &lt;code&gt;10&lt;/code&gt; are extensionally equivalent. Extensional equivalence gives us the basis to make “equals-for-equals” claims – it makes intuitive sense why &lt;code&gt;3 + 7&lt;/code&gt; and &lt;code&gt;3 + (3 + 4)&lt;/code&gt; evaluate to the same value, as one way to look at it is &lt;code&gt;7&lt;/code&gt; and &lt;code&gt;3 + 4&lt;/code&gt; essentially “function in the same way” and we can replace one expression for the other in a larger expression to have the same outcome. Note that this “equals-for-equals” intuitive substitution as we know is only possible in a world without side-effects.&lt;/p&gt;
&lt;p&gt;Extensional equivalence is a concept that comes from set theory, and we’ll be using it quite a bit in these functional programming notes to talk about correctness and reason about our programs. We’ll use the symbol &lt;code&gt;~=&lt;/code&gt; to denote extensional equivalence.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;referential-transparency&quot; class=&quot;level3&quot;&gt;
&lt;h3&gt;Referential Transparency&lt;/h3&gt;
&lt;p&gt;That “equals-for-equals” concept I mentioned earlier has a name! It’s called referential transparency. The concept is that in a functional program, we can replace any expression with another extensionally equivalent one without affecting the value of the program.&lt;/p&gt;
&lt;p&gt;We seemingly do this “equals-for-equals” substitution all the time, but extensional equivalence and referential transparency are powerful constructs despite how intuitive they are. They can be leveraged in program optimization and simplifying steps in order to write better and cleaner programs.&lt;/p&gt;
&lt;p&gt;Referential transparency is a property which still does exist in the imperative world with side-effects – we just have to take those side-effects into account in addition to values in what we define “equivalent” to be. Because in a functional program with no side-effects, we can evaluate an expression more than once and get the exact same outcome every time. Additionally then, the order in which we evaluate expressions has no difference in the value of the program which makes employing and reasoning about parallel evaluation strategies much more straightforward.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;totality&quot; class=&quot;level3&quot;&gt;
&lt;h3&gt;Totality&lt;/h3&gt;
&lt;p&gt;Another property I want to introduce is totality. A function &lt;code&gt;f : t -&amp;gt; t'&lt;/code&gt; is total if for all possible values &lt;code&gt;v&lt;/code&gt; of type &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;f v&lt;/code&gt; evaluates to a value. So, if a function raises an exception on some inputs or loops forever, it is not total – the division function, for example, is not total because it raises an exception when dividing by 0. Totality is a useful tool for talking about correctness, as we could justify some expression &lt;code&gt;x + f y&lt;/code&gt; as reducing to a value if they are all appropriately typed and &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are values and &lt;code&gt;f&lt;/code&gt; is total.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;functions-are-values&quot; class=&quot;level3&quot;&gt;
&lt;h3&gt;Functions are values!&lt;/h3&gt;
&lt;p&gt;A function value consists of an anonymous lambda expression and an environment of bindings for any non-local variables that are used in the scope of the function. This combination of a lambda expression and environment is a closure. We then often bind these function values to variables with the &lt;code&gt;fun&lt;/code&gt; keyword.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id=&quot;patterns&quot; class=&quot;level2&quot;&gt;
&lt;h2&gt;Patterns&lt;/h2&gt;
&lt;p&gt;A pattern is either a constant (e.g. &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;), variable (e.g. &lt;code&gt;x : int&lt;/code&gt;), wildcard (&lt;code&gt;_&lt;/code&gt;), or a tuple of patterns. Patterns are linear (so each variable can only occur at most once) and are also recursively defined. Additionally, when we talk about datatype declarations, we’ll also see that datatype constructors applied to an argument is also another type of pattern.&lt;/p&gt;
&lt;p&gt;Pattern-matching is the process by which a value &lt;em&gt;matches&lt;/em&gt; a pattern, and the bindings this matching produces. Each pattern has a set of values that it matches with, and a value successfully matches a pattern if it is a member of that set. Additionally, different patterns also have special rules about what bindings occur with that matching.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Constant patterns are matched by values that are that constant. For example, the pattern &lt;code&gt;0&lt;/code&gt; will only match the value &lt;code&gt;0&lt;/code&gt; (and trying to match &lt;code&gt;1&lt;/code&gt; with the pattern &lt;code&gt;0&lt;/code&gt; will fail).&lt;/li&gt;
&lt;li&gt;Variable patterns are matched by all values of the respective type, and will also bind the matched value to that variable. For example, matching &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;x : int&lt;/code&gt; will succeed and also create the binding &lt;code&gt;[0 / x]&lt;/code&gt;. All values of type &lt;code&gt;int&lt;/code&gt; will match this pattern. Values not of that type, like &lt;code&gt;true&lt;/code&gt;, will fail though.&lt;/li&gt;
&lt;li&gt;Wildcard patterns are matched by all values of its respective type like the variable pattern. However, wildcard patterns do not create any bindings.&lt;/li&gt;
&lt;li&gt;Tuples of patterns are then matched by tuples of respective values that match those patterns. So for example, &lt;code&gt;(0, true)&lt;/code&gt; will match the pattern &lt;code&gt;(0, x : bool)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id=&quot;using-patterns&quot; class=&quot;level2&quot;&gt;
&lt;h2&gt;Using Patterns&lt;/h2&gt;
&lt;section id=&quot;functions&quot; class=&quot;level3&quot;&gt;
&lt;h3&gt;Functions&lt;/h3&gt;
&lt;p&gt;Patterns can be used in clausal function definitions. So, the general form of a function definition is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(fn p1 =&amp;gt; e1
  | p2 =&amp;gt; e2
  ...
  | p_n =&amp;gt; e_n)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So, such a function will have type &lt;code&gt;t1 -&amp;gt; t2&lt;/code&gt; if every pattern &lt;code&gt;p_i&lt;/code&gt; matches type &lt;code&gt;t1&lt;/code&gt; and every expression &lt;code&gt;e_i&lt;/code&gt; matches type &lt;code&gt;t2&lt;/code&gt;. For example, &lt;code&gt;(fn (x : int, y : int) =&amp;gt; (x + 1) * (y - 1))&lt;/code&gt; has type &lt;code&gt;int * int -&amp;gt; int&lt;/code&gt; since &lt;code&gt;(x + 1) * (y - 1)&lt;/code&gt; has type &lt;code&gt;int&lt;/code&gt; assuming &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are both of type int, so then the pattern &lt;code&gt;(x, y)&lt;/code&gt; must match type &lt;code&gt;int * int&lt;/code&gt;. Here I explicitly typed it, but if I didn’t and just wrote &lt;code&gt;(fn (x, y) =&amp;gt; (x + 1) * (y - 1))&lt;/code&gt; this would still hold.&lt;/p&gt;
&lt;p&gt;So then when evaluating the application of an argument to a function, we are actually pattern-matching. Note that we eagerly evaluate here as well, and we only apply values to patterns after we’ve reduced all expressions. We first evaluate the expression, then evaluate the argument, and if both of these evaluations produce values, the resulting expression (where &lt;code&gt;v&lt;/code&gt; is some generic value)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(fn p1 =&amp;gt; e1
  | p2 =&amp;gt; e2
  ...
  | p_n =&amp;gt; e_n) v&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;takes place by trying to match &lt;code&gt;v&lt;/code&gt; which each pattern in order, starting with &lt;code&gt;p1&lt;/code&gt; and going to &lt;code&gt;p_n&lt;/code&gt;. If the value matches a pattern and nothing prior, it will create any bindings according to that pattern and then reduce to the respective expression.&lt;/p&gt;
&lt;p&gt;Note – if we apply an argument to a function and the value fails to match any of the function’s clauses (patterns), he evaluation results in a “non-exhaustive match failure”, an error raised at run-time.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;cases&quot; class=&quot;level3&quot;&gt;
&lt;h3&gt;Cases&lt;/h3&gt;
&lt;p&gt;I gave an example of cases in the last post, but I’ll visit them again now that we’ve discussed patterns. A case expression has the form&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(case e of
  p1 =&amp;gt; e1
| p2 =&amp;gt; e2
...
| p_n =&amp;gt; e_n)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that this is an &lt;em&gt;expression&lt;/em&gt;, not a statement. A well-formed expression has a type and can be evaluated. A case expression is well-typed if the following holds:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;e&lt;/code&gt; is of type &lt;code&gt;t&lt;/code&gt; and each &lt;code&gt;p_1&lt;/code&gt;, …, &lt;code&gt;p_n&lt;/code&gt; is also of type &lt;code&gt;t&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;e_1&lt;/code&gt;, …, &lt;code&gt;e_n&lt;/code&gt; are all of some type &lt;code&gt;t'&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then, the case expression has type &lt;code&gt;t'&lt;/code&gt;. Similarly to earlier, the pattern-matching in the case expression also produces bindings that exist in the scope of each clause.&lt;/p&gt;
&lt;p&gt;For example, &lt;code&gt;case 3 of 0 =&amp;gt; &quot;hi&quot; | x =&amp;gt; &quot;bye&quot; | _ =&amp;gt; &quot;was this clause necessary?&quot;&lt;/code&gt; will evaluate to &lt;code&gt;[3 / x] &quot;bye&quot;&lt;/code&gt;. Note that we didn’t evaluate to the first clause because trying to match &lt;code&gt;3&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt; failed! If it did succeed (if the pattern was &lt;code&gt;0&lt;/code&gt;, note that this pattern-matching does not create any bindings whereas the variable pattern does). Additionally, the last clause is redundant because no value will fail to match the variable pattern but successfully match to the wildcard pattern. Also just to emphasize again: a wildcard pattern and variable pattern match the same set of values, but a variable pattern creates bindings whereas a wildcard pattern does not!&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;an-example&quot; class=&quot;level3&quot;&gt;
&lt;h3&gt;An example&lt;/h3&gt;
&lt;p&gt;We talked about the factorial function earlier. Let’s step through an example evaluation with it again.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fun fact 0 = 1
  | fact n = n * fact (n-1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So, let’s look at &lt;code&gt;fact 3&lt;/code&gt;. Note that when we evaluate this, we are first reducing the function and &lt;code&gt;3&lt;/code&gt; to a value, and then trying to pattern-match. So, &lt;code&gt;3&lt;/code&gt; will fail the pattern match to &lt;code&gt;0&lt;/code&gt;, but then succeed to &lt;code&gt;n&lt;/code&gt; and also create the binding &lt;code&gt;[3 / n]&lt;/code&gt; and reduce to the expression &lt;code&gt;[3 / n] n * fact (n-1)&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fact 3
~=[3 / n] n * fact (n-1)
~= 3 * fact 2
~= 3 * [2 / n] n * fact (n - 1)
~= 3 * 2 * fact 1
~= 3 * 2 * [1 / n] n * fact (n - 1)
~= 3 * 2 * 1 * fact 0
~= 3 * 2 * 1 * 1
~= 6&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;/section&gt;
</description>
        <pubDate>Wed, 15 Apr 2020 00:00:00 -0700</pubDate>
        <link>http://localhost:4000/fp-2/</link>
        <guid isPermaLink="true">http://localhost:4000/fp-2/</guid>
        
        
        <category>SML</category>
        
        <category>functional programming</category>
        
        <category>engineering</category>
        
      </item>
    
      <item>
        <title>Debate</title>
        <description>&lt;p&gt;Why did I become a software engineer?&lt;/p&gt;

&lt;p&gt;Debating?&lt;/p&gt;

&lt;p&gt;lbieral arts and engineering ,stem, like two opposing forces&lt;/p&gt;

&lt;p&gt;what i’ve learned&lt;/p&gt;

&lt;p&gt;lincoln-douglas&lt;/p&gt;

&lt;p&gt;value, value criterion&lt;/p&gt;
</description>
        <pubDate>Tue, 31 Mar 2020 00:00:00 -0700</pubDate>
        <link>http://localhost:4000/debate/</link>
        <guid isPermaLink="true">http://localhost:4000/debate/</guid>
        
        
      </item>
    
      <item>
        <title>Debating and Engineering</title>
        <description>&lt;p&gt;Why did I become a software engineer?&lt;/p&gt;
&lt;p&gt;Debating?&lt;/p&gt;
&lt;p&gt;lbieral arts and engineering ,stem, like two opposing forces&lt;/p&gt;
&lt;p&gt;what i’ve learned&lt;/p&gt;
&lt;p&gt;lincoln-douglas&lt;/p&gt;
&lt;p&gt;value, value criterion&lt;/p&gt;
</description>
        <pubDate>Tue, 31 Mar 2020 00:00:00 -0700</pubDate>
        <link>http://localhost:4000/debate/</link>
        <guid isPermaLink="true">http://localhost:4000/debate/</guid>
        
        
        <category>career</category>
        
        <category>debate</category>
        
      </item>
    
      <item>
        <title>Watchmen</title>
        <description>&lt;p&gt;something here about dr manhattan
other things from books at the moment that i like&lt;/p&gt;

&lt;p&gt;quote from the first cell about other things and finding comfort in literature&lt;/p&gt;

&lt;p&gt;never let me go&lt;/p&gt;

&lt;p&gt;or at least just add it to my images&lt;/p&gt;
</description>
        <pubDate>Mon, 30 Mar 2020 00:00:00 -0700</pubDate>
        <link>http://localhost:4000/watchmen/</link>
        <guid isPermaLink="true">http://localhost:4000/watchmen/</guid>
        
        
      </item>
    
      <item>
        <title>Ddia Chp1</title>
        <description>
</description>
        <pubDate>Mon, 30 Mar 2020 00:00:00 -0700</pubDate>
        <link>http://localhost:4000/ddia-chp1/</link>
        <guid isPermaLink="true">http://localhost:4000/ddia-chp1/</guid>
        
        
      </item>
    
  </channel>
</rss>
